{"ast":null,"code":"import _classCallCheck from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/funmath-admin/src/views/results/modals/UpdateImageModal.js\";\nimport React from 'react';\nimport { CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CImg, CModalHeader } from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\nimport { BASE_URL } from \"../../../api/Api\";\n\nvar UpdateImageModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(UpdateImageModal, _React$Component);\n\n  var _super = _createSuper(UpdateImageModal);\n\n  function UpdateImageModal(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateImageModal);\n\n    _this = _super.call(this, props);\n\n    _this.imageUploader = function (e) {\n      e.preventDefault();\n      console.log(e.target.files);\n\n      _this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      var cookies = new Cookies();\n      var formData = new FormData();\n      formData.append('images', _this.state.selectedFile); // axios.post(BASE_URL +`/posts/updateImage/${this.props.imageItem}`, this.state.selectedFile,\n\n      axios.post(BASE_URL + \"/posts/updateImage/\".concat(_this.props.imageItem), formData, {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        axios.get(BASE_URL + '/usersnews/').then(function (response) {\n          console.log(response.data);\n          var data = response.data;\n\n          _this.props.updateNews(data);\n\n          console.log(\"o/p\" + _this.state.newsList);\n        });\n\n        _this.props.updateImageToggle();\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response);\n        } // throw new Error('Sorry Internal Server Error')\n\n\n        this.showError(error.response);\n      });\n    };\n\n    _this.state = {\n      _id: _this.props.imageItem\n    };\n    return _this;\n  }\n\n  _createClass(UpdateImageModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cookies = new Cookies();\n      axios.get(BASE_URL + \"/posts/\".concat(this.props.imageItem), {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        var news = response.data;\n\n        _this2.setState({\n          images: news.images\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CModal, {\n        size: 'xl',\n        show: this.props.updateImageModal,\n        onClose: this.props.updateImageToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CModalHeader, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, \"Update Image\"), /*#__PURE__*/React.createElement(CModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CForm, {\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, \"Images\"), /*#__PURE__*/React.createElement(CImg, {\n        src: BASE_URL + \"/PostImage/\" + this.state.images,\n        alt: \"image\",\n        style: {\n          width: 500,\n          height: 400\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(CInput, {\n        type: \"file\",\n        name: \"files\",\n        onChange: this.imageUploader,\n        placeholder: \"Enter Post Details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CButton, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-scrubber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 82\n        }\n      }), \" Submit\"), /*#__PURE__*/React.createElement(CButton, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 80\n        }\n      }), \" Reset\"))))));\n    }\n  }]);\n\n  return UpdateImageModal;\n}(React.Component);\n\nexport default UpdateImageModal;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/funmath-admin/src/views/results/modals/UpdateImageModal.js"],"names":["React","CButton","CForm","CFormGroup","CInput","CLabel","CModal","CModalBody","CImg","CModalHeader","axios","Cookies","CIcon","BASE_URL","UpdateImageModal","props","imageUploader","e","preventDefault","console","log","target","files","setState","selectedFile","handleFormSubmit","cookies","formData","FormData","append","state","post","imageItem","headers","Authorization","get","then","response","data","updateNews","newsList","updateImageToggle","catch","error","showError","_id","news","images","updateImageModal","width","height","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CImg, CModalHeader} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\nimport {BASE_URL} from \"../../../api/Api\";\n\nclass UpdateImageModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            _id: this.props.imageItem,\n\n        }\n    }\n\n    imageUploader = (e) => {\n        e.preventDefault()\n\n        console.log(e.target.files)\n\n        this.setState({\n            selectedFile: e.target.files[0],\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        let formData = new FormData()\n        formData.append('images', this.state.selectedFile)\n\n        // axios.post(BASE_URL +`/posts/updateImage/${this.props.imageItem}`, this.state.selectedFile,\n        axios.post(BASE_URL +`/posts/updateImage/${this.props.imageItem}`,\n            formData,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n\n                }\n            })\n            .then(response => {\n\n                axios.get(BASE_URL + '/usersnews/')\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n\n                        console.log(\"o/p\" + this.state.newsList)\n                    })\n\n                this.props.updateImageToggle()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(BASE_URL + `/posts/${this.props.imageItem}`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let news = response.data\n                this.setState({\n                    images: news.images,\n\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.updateImageModal}\n                        onClose={this.props.updateImageToggle}\n                >\n                    <CModalHeader closeButton>Update Image</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"images\">Images</CLabel>\n\n                                <CImg src={BASE_URL + \"/PostImage/\" + this.state.images}\n                                      alt=\"image\"\n                                      style={{width: 500, height: 400}}/>\n                                <CInput type=\"file\" name=\"files\" onChange={this.imageUploader}\n                                        placeholder=\"Enter Post Details\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                                <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\"/> Reset</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default UpdateImageModal\n"]},"metadata":{},"sourceType":"module"}