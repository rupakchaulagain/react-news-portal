{"ast":null,"code":"import _classCallCheck from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js\";\nimport { CBadge, CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from \"@coreui/react\";\nimport React from \"react\";\nimport * as axios from \"axios\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['productName', 'productCategory', 'productType', 'productQuantity', \"costPrice\", \"sellingPrice\", 'actions'];\n\nvar ProductTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProductTable, _React$Component);\n\n  var _super = _createSuper(ProductTable);\n\n  function ProductTable(props) {\n    var _this;\n\n    _classCallCheck(this, ProductTable);\n\n    _this = _super.call(this, props); // this.state={\n    //   productList:[]\n    // }\n    //\n    // this.setState({\n    //   productList:props.productList\n    // })\n\n    var productList = _this.props.productList;\n    return _this;\n  } // fetchAllProduct=()=>{\n  //   let productSearch={\n  //     \"productCategory\": \"\",\n  //     \"productCode\": \"\",\n  //     \"productName\": \"\",\n  //     \"productType\": \"\"\n  //   }\n  //\n  //   let page=1\n  //   let size=10\n  //\n  //   axios.put('http://localhost:8080/api/v1/product/search?page=' + page + \"&size=\" + size,{productSearch})\n  //     // .then(response => response.json())\n  //     .then(response => {\n  //       const data=response.data.responseDTOList\n  //       console.log(\"productList=\" + data)\n  //\n  //       this.setState({\n  //         productList: data\n  //       })\n  //\n  //       console.log(\"o/p\"+this.state.productList)\n  //     })\n  //\n  // }\n  // componentWillMount() {\n  //   this.fetchAllProduct()\n  // }\n  //\n  // componentDidMount() {\n  //   this.fetchAllProduct()\n  // }\n\n\n  _createClass(ProductTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"render=\" + this.state.productList);\n      return /*#__PURE__*/React.createElement(CDataTable, {\n        items: this.state.productList,\n        fields: fields,\n        bordered: true,\n        itemsPerPage: 10,\n        pagination: true,\n        scopedSlots: {\n          'status': function status(item) {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(CBadge, {\n              color: getBadge(item.status),\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }\n            }, item.status));\n          },\n          'actions': function actions() {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(CDropdown, {\n              className: \"m-1 btn-group\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(CDropdownToggle, {\n              color: \"secondary\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }\n            }, \"Actions\"), /*#__PURE__*/React.createElement(CDropdownMenu, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(CDropdownItem, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }\n            }, \"View\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }\n            }, \"Edit\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }\n            }, \"Delete\"))));\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ProductTable;\n}(React.Component);\n\nexport default ProductTable;","map":{"version":3,"sources":["/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js"],"names":["CBadge","CDataTable","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","React","axios","getBadge","status","fields","ProductTable","props","productList","console","log","state","item","Component"],"mappings":";;;;;AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,aAAvC,EAAsDC,aAAtD,EAAqEC,eAArE,QAA2F,eAA3F;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACzB,UAAQA,MAAR;AACE,SAAK,QAAL;AACE,aAAO,SAAP;;AACF,SAAK,UAAL;AACE,aAAO,WAAP;;AACF,SAAK,SAAL;AACE,aAAO,SAAP;;AACF,SAAK,QAAL;AACE,aAAO,QAAP;;AACF;AACE,aAAO,SAAP;AAVJ;AAYD,CAbD;;AAcA,IAAMC,MAAM,GAAG,CACb,aADa,EAEb,iBAFa,EAGb,aAHa,EAIb,iBAJa,EAKb,WALa,EAMb,cANa,EAOb,SAPa,CAAf;;IASMC,Y;;;;;AACJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN,EADiB,CAGjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAIC,WAAW,GAAC,MAAKD,KAAL,CAAWC,WAA3B;AAXiB;AAalB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BAES;AAAA;;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAU,KAAKC,KAAL,CAAWH,WAAjC;AAEA,0BACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWH,WADpB;AAEE,QAAA,MAAM,EAAEH,MAFV;AAGE,QAAA,QAAQ,MAHV;AAIE,QAAA,YAAY,EAAE,EAJhB;AAKE,QAAA,UAAU,MALZ;AAME,QAAA,WAAW,EAAE;AACX,oBACE,gBAACO,IAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,MAAD;AAAQ,cAAA,KAAK,EAAET,QAAQ,CAACS,IAAI,CAACR,MAAN,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGQ,IAAI,CAACR,MADR,CADF,CADF;AAAA,WAFS;AASX,qBACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,SAAD;AAAW,cAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,eAAD;AAAiB,cAAA,KAAK,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CAJF,CADF,CADF;AAAA;AAVS,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAmCD;;;;EAzFwBH,KAAK,CAACY,S;;AA4FjC,eAAeP,YAAf","sourcesContent":["import {CBadge, CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle} from \"@coreui/react\";\nimport React from \"react\";\nimport * as axios from \"axios\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active':\n      return 'success'\n    case 'Inactive':\n      return 'secondary'\n    case 'Pending':\n      return 'warning'\n    case 'Banned':\n      return 'danger'\n    default:\n      return 'primary'\n  }\n}\nconst fields = [\n  'productName',\n  'productCategory',\n  'productType',\n  'productQuantity',\n  \"costPrice\",\n  \"sellingPrice\",\n  'actions']\n\nclass ProductTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // this.state={\n    //   productList:[]\n    // }\n    //\n    // this.setState({\n    //   productList:props.productList\n    // })\n\n    let productList=this.props.productList\n\n  }\n\n  // fetchAllProduct=()=>{\n  //   let productSearch={\n  //     \"productCategory\": \"\",\n  //     \"productCode\": \"\",\n  //     \"productName\": \"\",\n  //     \"productType\": \"\"\n  //   }\n  //\n  //   let page=1\n  //   let size=10\n  //\n  //   axios.put('http://localhost:8080/api/v1/product/search?page=' + page + \"&size=\" + size,{productSearch})\n  //     // .then(response => response.json())\n  //     .then(response => {\n  //       const data=response.data.responseDTOList\n  //       console.log(\"productList=\" + data)\n  //\n  //       this.setState({\n  //         productList: data\n  //       })\n  //\n  //       console.log(\"o/p\"+this.state.productList)\n  //     })\n  //\n  // }\n\n  // componentWillMount() {\n  //   this.fetchAllProduct()\n  // }\n  //\n  // componentDidMount() {\n  //   this.fetchAllProduct()\n  // }\n\n  render() {\n\n    console.log(\"render=\"+this.state.productList)\n\n    return (\n      <CDataTable\n        items={this.state.productList}\n        fields={fields}\n        bordered\n        itemsPerPage={10}\n        pagination\n        scopedSlots={{\n          'status':\n            (item) => (\n              <td>\n                <CBadge color={getBadge(item.status)}>\n                  {item.status}\n                </CBadge>\n              </td>\n            ),\n          'actions':\n            () => (\n              <td>\n                <CDropdown className=\"m-1 btn-group\">\n                  <CDropdownToggle color=\"secondary\">\n                    Actions\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>View</CDropdownItem>\n                    <CDropdownItem>Edit</CDropdownItem>\n                    <CDropdownItem>Delete</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </td>\n            )\n\n        }}\n      />\n    )\n  }\n}\n\nexport default ProductTable\n"]},"metadata":{},"sourceType":"module"}