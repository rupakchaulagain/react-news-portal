{"ast":null,"code":"import _defineProperty from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/jharna/src/views/users/modals/EditModal.js\";\nimport React from 'react';\nimport { CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader, CTextarea } from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\n\nvar EditModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditModal, _React$Component);\n\n  var _super = _createSuper(EditModal);\n\n  function EditModal(props) {\n    var _this;\n\n    _classCallCheck(this, EditModal);\n\n    _this = _super.call(this, props);\n\n    _this.handleInputChange = function (e) {\n      console.log(name, \"===\", value);\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      var cookies = new Cookies();\n      var user = {\n        email: _this.state.email,\n        password: _this.state.password\n      };\n      axios.put(\"https://frozen-refuge-74833.herokuapp.com/users/me\", user, {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        axios.get('https://frozen-refuge-74833.herokuapp.com/users/me', {\n          headers: {\n            Authorization: cookies.get('token')\n          }\n        }).then(function (response) {\n          console.log(response.data);\n          var data = response.data;\n          var list = [];\n          list.push(data);\n\n          _this.props.updateUser(list);\n        });\n\n        _this.props.editModalToggle();\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response);\n        } // throw new Error('Sorry Internal Server Error')\n\n\n        this.showError(error.response);\n      });\n    };\n\n    _this.state = {\n      user: {},\n      _id: _this.props.editItem,\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EditModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cookies = new Cookies();\n      axios.get(\"https://frozen-refuge-74833.herokuapp.com/users/me\", {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        var user = response.data;\n\n        _this2.setState({\n          email: user.email,\n          password: user.password\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CModal, {\n        size: 'xl',\n        show: this.props.editModal,\n        onClose: this.props.editModalToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CModalHeader, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, \"News Detail\"), /*#__PURE__*/React.createElement(CModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CForm, {\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 33\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"email\",\n        id: \"email\",\n        value: this.state.email,\n        onChange: this.handleInputChange,\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"postcategory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"password\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: this.handleInputChange,\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CButton, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-scrubber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 82\n        }\n      }), \" Submit\"))))));\n    }\n  }]);\n\n  return EditModal;\n}(React.Component);\n\nexport default EditModal;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/users/modals/EditModal.js"],"names":["React","CButton","CForm","CFormGroup","CInput","CLabel","CModal","CModalBody","CModalHeader","CTextarea","axios","Cookies","CIcon","EditModal","props","handleInputChange","e","console","log","name","value","target","setState","handleFormSubmit","preventDefault","cookies","user","email","state","password","put","headers","Authorization","get","then","response","data","list","push","updateUser","editModalToggle","catch","error","showError","_id","editItem","editModal","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader, CTextarea} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\n\nclass EditModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n            _id: this.props.editItem,\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        console.log(name, \"===\", value)\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        let user = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n\n        axios.put(`https://frozen-refuge-74833.herokuapp.com/users/me`, user,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                },\n            })\n            .then(response => {\n\n                axios.get('https://frozen-refuge-74833.herokuapp.com/users/me',\n                    {\n                        headers: {\n\n                            Authorization: cookies.get('token')\n                        }\n                    }\n                )\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n                        let list=[]\n                        list.push(data)\n\n                        this.props.updateUser(list)\n\n                    })\n\n                this.props.editModalToggle()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(`https://frozen-refuge-74833.herokuapp.com/users/me`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let user = response.data\n                this.setState({\n                    email: user.email,\n                    password: user.password\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.editModal}\n                        onClose={this.props.editModalToggle}\n                >\n                    <CModalHeader closeButton>News Detail</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n                            <CFormGroup>\n\n                                <CLabel htmlFor=\"email\">Email</CLabel>\n                                <CInput name=\"email\" id=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postcategory\">Password</CLabel>\n                                <CInput name=\"password\" id=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}