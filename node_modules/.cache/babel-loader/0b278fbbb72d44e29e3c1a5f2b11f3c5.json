{"ast":null,"code":"import _defineProperty from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/funmath-admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/funmath-admin/src/views/questions/QuestionsForm.js\";\nimport React from 'react';\nimport { CButton, CCard, CCardBody, CForm, CFormGroup, CInput, CLabel } from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport CIcon from \"@coreui/icons-react\";\nimport Cookies from \"universal-cookie\";\nimport { BASE_URL } from \"../../api/Api\";\n\nvar QuestionsForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(QuestionsForm, _React$Component);\n\n  var _super = _createSuper(QuestionsForm);\n\n  function QuestionsForm(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionsForm);\n\n    _this = _super.call(this, props);\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.imageUploader = function (e) {\n      e.preventDefault();\n      console.log(e.target.files);\n\n      _this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      var cookies = new Cookies();\n      var formData = new FormData();\n      formData.append('images', _this.state.selectedFile);\n      formData.append('posttitle', _this.state.posttitle);\n      formData.append('postcategory', _this.state.postcategory);\n      formData.append('postdetails', _this.state.postdetails);\n      formData.append('postconclusion', _this.state.postconclusion);\n      axios.post(BASE_URL + '/posts/', formData, {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        axios.get(BASE_URL + '/usersnews/').then(function (response) {\n          console.log(response.data);\n          var data = response.data;\n\n          _this.props.updateNews(data);\n\n          console.log(\"o/p\" + _this.state.newsList);\n        });\n\n        _this.props.manageTabController();\n\n        _this.props.showAlert();\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response);\n        } // throw new Error('Sorry Internal Server Error')\n\n\n        this.showError(error.response);\n      });\n    };\n\n    console.log(props);\n    _this.state = {\n      questions: \"\",\n      description: \"\",\n      postdetails: \"\",\n      postconclusion: \"\",\n      uploading: false,\n      selectedFile: null\n    };\n    return _this;\n  }\n\n  _createClass(QuestionsForm, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CForm, {\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"posttitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, \"Questions\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"question\",\n        id: \"question\",\n        value: this.state.question,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter QUestions\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, \"Description\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"description\",\n        id: \"description\",\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Description\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }\n      }, \"Type\"), /*#__PURE__*/React.createElement(CInput, {\n        id: \"type\",\n        name: \"type\",\n        value: this.state.type,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"level\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }, \"Level\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"level\",\n        id: \"level\",\n        value: this.state.level,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter level\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"Correct Answer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, \"Correct Answer\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"correctAnswer\",\n        id: \"correctAnswer\",\n        value: this.state.correctAnswer,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Correct Answer\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"option1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }\n      }, \"Options\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"option1\",\n        id: \"option1\",\n        value: this.state.option1,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Option 1\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(CInput, {\n        name: \"option2\",\n        id: \"option2\",\n        value: this.state.option2,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Option 2\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(CInput, {\n        name: \"option3\",\n        id: \"option3\",\n        value: this.state.option3,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Option 3\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(CInput, {\n        name: \"option4\",\n        id: \"option4\",\n        value: this.state.option4,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Option 4\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CButton, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-scrubber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 78\n        }\n      }), \" Submit\")))));\n    }\n  }]);\n\n  return QuestionsForm;\n}(React.Component);\n\nexport default QuestionsForm;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/funmath-admin/src/views/questions/QuestionsForm.js"],"names":["React","CButton","CCard","CCardBody","CForm","CFormGroup","CInput","CLabel","axios","CIcon","Cookies","BASE_URL","QuestionsForm","props","handleInputChange","e","target","name","value","setState","imageUploader","preventDefault","console","log","files","selectedFile","handleFormSubmit","cookies","formData","FormData","append","state","posttitle","postcategory","postdetails","postconclusion","post","headers","Authorization","get","then","response","data","updateNews","newsList","manageTabController","showAlert","catch","error","showError","questions","description","uploading","question","type","level","correctAnswer","option1","option2","option3","option4","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {CButton, CCard, CCardBody, CForm, CFormGroup, CInput, CLabel,} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport CIcon from \"@coreui/icons-react\";\nimport Cookies from \"universal-cookie\";\nimport {BASE_URL} from \"../../api/Api\";\n\nclass QuestionsForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props)\n\n        this.state = {\n            questions: \"\",\n            description: \"\",\n            postdetails: \"\",\n            postconclusion: \"\",\n            uploading: false,\n            selectedFile: null,\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    imageUploader = (e) => {\n        e.preventDefault()\n\n        console.log(e.target.files)\n\n        this.setState({\n            selectedFile: e.target.files[0],\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        let formData = new FormData()\n        formData.append('images', this.state.selectedFile)\n        formData.append('posttitle', this.state.posttitle);\n        formData.append('postcategory', this.state.postcategory);\n        formData.append('postdetails', this.state.postdetails);\n        formData.append('postconclusion', this.state.postconclusion)\n\n\n        axios.post(BASE_URL + '/posts/',\n            formData,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                }\n            })\n            .then(response => {\n\n                axios.get(BASE_URL + '/usersnews/')\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n\n                        console.log(\"o/p\" + this.state.newsList)\n                    })\n\n                this.props.manageTabController()\n\n                this.props.showAlert()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n\n    render() {\n        return (\n\n\n            <CCard>\n                <CCardBody>\n\n                    <CForm onSubmit={this.handleFormSubmit}>\n                        <CFormGroup>\n                            <CLabel htmlFor=\"posttitle\">Questions</CLabel>\n                            <CInput name=\"question\" id=\"question\"\n                                    value={this.state.question}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter QUestions\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"description\">Description</CLabel>\n                            <CInput name=\"description\" id=\"description\"\n                                    value={this.state.description}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Description\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"type\">Type</CLabel>\n                            <CInput id=\"type\" name=\"type\"\n                                    value={this.state.type}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Type\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"level\">Level</CLabel>\n                            <CInput name=\"level\" id=\"level\"\n                                    value={this.state.level}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter level\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"Correct Answer\">Correct Answer</CLabel>\n                            <CInput name=\"correctAnswer\" id=\"correctAnswer\"\n                                    value={this.state.correctAnswer}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Correct Answer\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"option1\">Options</CLabel>\n                            <CInput name=\"option1\" id=\"option1\"\n                                    value={this.state.option1}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Option 1\"\n                                    required=\"required\"/>\n                            <CInput name=\"option2\" id=\"option2\"\n                                    value={this.state.option2}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Option 2\"\n                                    required=\"required\"/>\n                            <CInput name=\"option3\" id=\"option3\"\n                                    value={this.state.option3}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Option 3\"\n                                    required=\"required\"/>\n                            <CInput name=\"option4\" id=\"option4\"\n                                    value={this.state.option4}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Option 4\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                name=\"cil-scrubber\"/> Submit</CButton>\n                        </CFormGroup>\n\n                    </CForm>\n                </CCardBody>\n\n            </CCard>\n\n\n        )\n    }\n}\n\nexport default QuestionsForm\n"]},"metadata":{},"sourceType":"module"}