{"ast":null,"code":"import _defineProperty from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{CButton,CForm,CFormGroup,CInput,CLabel,CModal,CModalBody,CModalHeader}from\"@coreui/react\";import*as axios from\"axios\";import Cookies from\"universal-cookie\";import CIcon from\"@coreui/icons-react\";import{BASE_URL}from\"../../../api/Api\";var EditModal=/*#__PURE__*/function(_React$Component){_inherits(EditModal,_React$Component);var _super=_createSuper(EditModal);function EditModal(props){var _this;_classCallCheck(this,EditModal);_this=_super.call(this,props);_this.handleInputChange=function(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;_this.setState(_defineProperty({},name,value));};_this.handleFormSubmit=function(e){e.preventDefault();var cookies=new Cookies();var user={email:_this.state.email,password:_this.state.password};axios.put(BASE_URL+\"/users/me\",user,{headers:{Authorization:cookies.get('token')}}).then(function(response){axios.get(BASE_URL+'/users/me',{headers:{Authorization:cookies.get('token')}}).then(function(response){console.log(response.data);var data=response.data;var list=[];list.push(data);_this.props.updateUser(list);});_this.props.editModalToggle();}).catch(function(error){if(error.response){// Request made and server responded\nconsole.log(error.response);}// throw new Error('Sorry Internal Server Error')\nthis.showError(error.response);});};_this.state={user:{},_id:_this.props.editItem,email:\"\",password:\"\"};return _this;}_createClass(EditModal,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var cookies=new Cookies();axios.get(BASE_URL+\"/users/me\",{headers:{Authorization:cookies.get('token')}}).then(function(response){var user=response.data;_this2.setState({email:user.email,password:user.password});});}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CModal,{size:'xl',show:this.props.editModal,onClose:this.props.editModalToggle},/*#__PURE__*/React.createElement(CModalHeader,{closeButton:true},\"News Detail\"),/*#__PURE__*/React.createElement(CModalBody,null,/*#__PURE__*/React.createElement(CForm,{onSubmit:this.handleFormSubmit},/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"email\"},\"Email\"),/*#__PURE__*/React.createElement(CInput,{name:\"email\",id:\"email\",value:this.state.email,onChange:this.handleInputChange,required:\"required\"})),/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"postcategory\"},\"Password\"),/*#__PURE__*/React.createElement(CInput,{name:\"password\",id:\"password\",value:this.state.password,onChange:this.handleInputChange,required:\"required\"})),/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CButton,{type:\"submit\",size:\"sm\",color:\"primary\"},/*#__PURE__*/React.createElement(CIcon,{name:\"cil-scrubber\"}),\" Submit\"))))));}}]);return EditModal;}(React.Component);export default EditModal;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/users/modals/EditModal.js"],"names":["React","CButton","CForm","CFormGroup","CInput","CLabel","CModal","CModalBody","CModalHeader","axios","Cookies","CIcon","BASE_URL","EditModal","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","cookies","user","email","state","password","put","headers","Authorization","get","then","response","console","log","data","list","push","updateUser","editModalToggle","catch","error","showError","_id","editItem","editModal","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\nimport {BASE_URL} from \"../../../api/Api\";\n\nclass EditModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n            _id: this.props.editItem,\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        let user = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n\n        axios.put(BASE_URL+`/users/me`, user,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                },\n            })\n            .then(response => {\n\n                axios.get(BASE_URL+'/users/me',\n                    {\n                        headers: {\n\n                            Authorization: cookies.get('token')\n                        }\n                    }\n                )\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n                        let list=[]\n                        list.push(data)\n\n                        this.props.updateUser(list)\n\n                    })\n\n                this.props.editModalToggle()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(BASE_URL+`/users/me`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let user = response.data\n                this.setState({\n                    email: user.email,\n                    password: user.password\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.editModal}\n                        onClose={this.props.editModalToggle}\n                >\n                    <CModalHeader closeButton>News Detail</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n                            <CFormGroup>\n\n                                <CLabel htmlFor=\"email\">Email</CLabel>\n                                <CInput name=\"email\" id=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postcategory\">Password</CLabel>\n                                <CInput name=\"password\" id=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}