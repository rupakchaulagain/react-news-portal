{"ast":null,"code":"import _classCallCheck from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/jharna/src/views/feeds/NewsFeeds.js\";\nimport React from 'react';\nimport { CCard, CCardBody, CCardHeader, CCol, CContainer, CImg, CJumbotron, CListGroup, CListGroupItem } from \"@coreui/react\";\nimport Cookies from \"universal-cookie\";\nimport * as axios from \"axios\";\n\nvar NewsFeeds = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewsFeeds, _React$Component);\n\n  var _super = _createSuper(NewsFeeds);\n\n  function NewsFeeds() {\n    var _this;\n\n    _classCallCheck(this, NewsFeeds);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      news: []\n    };\n    return _this;\n  }\n\n  _createClass(NewsFeeds, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var id = this.props.match.params.id;\n      var cookies = new Cookies();\n      axios.get(\"https://frozen-refuge-74833.herokuapp.com/posts/\".concat(id), {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        var data = response.data;\n\n        _this2.setState({\n          news: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(CCol, {\n        xs: \"12\",\n        sm: \"12\",\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CCardHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      }, this.state.news.posttitle), /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CListGroupItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }\n      }, \" Post Category:\"), \" \", this.state.news.postcategory), /*#__PURE__*/React.createElement(CJumbotron, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CContainer, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(CImg, {\n        src: \"https://frozen-refuge-74833.herokuapp.com/PostImage/\" + this.state.news.images,\n        alt: \"image\",\n        style: {\n          width: 500,\n          height: 400\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }\n      }))), /*#__PURE__*/React.createElement(CListGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CListGroupItem, {\n        key: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, this.state.news.postdetails), /*#__PURE__*/React.createElement(CListGroupItem, {\n        key: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }\n      }, \" Post Conclusion:\"), this.state.news.postconclusion)))));\n    }\n  }]);\n\n  return NewsFeeds;\n}(React.Component);\n\nexport default NewsFeeds;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/feeds/NewsFeeds.js"],"names":["React","CCard","CCardBody","CCardHeader","CCol","CContainer","CImg","CJumbotron","CListGroup","CListGroupItem","Cookies","axios","NewsFeeds","state","news","console","log","props","id","match","params","cookies","get","headers","Authorization","then","response","data","setState","posttitle","postcategory","images","width","height","postdetails","postconclusion","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {\n    CCard,\n    CCardBody,\n    CCardHeader,\n    CCol,\n    CContainer,\n    CImg,\n    CJumbotron,\n    CListGroup,\n    CListGroupItem\n} from \"@coreui/react\";\nimport Cookies from \"universal-cookie\";\nimport * as axios from \"axios\";\n\nclass NewsFeeds extends React.Component {\n\n    state = {\n        news: []\n    }\n\n    componentDidMount() {\n\n        console.log(this.props)\n\n        const id=this.props.match.params.id\n\n        const cookies = new Cookies();\n\n        axios.get(`https://frozen-refuge-74833.herokuapp.com/posts/${id}`,\n            {\n                headers: {\n\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                console.log(response.data)\n                const data = response.data\n\n                this.setState({\n                    news: data\n                })\n\n            })\n\n\n    }\n\n\n    render() {\n        return (\n\n                    <CCol xs=\"12\" sm=\"12\" md=\"12\">\n                        <CCard>\n                            <CCardHeader>\n                                {this.state.news.posttitle}\n                            </CCardHeader>\n                            <CCardBody>\n\n                                <CListGroupItem>\n                                    <h3> Post Category:</h3> {this.state.news.postcategory}\n                                </CListGroupItem>\n\n\n                                <CJumbotron fluid>\n                                    <CContainer fluid>\n                                        <CImg src={\"https://frozen-refuge-74833.herokuapp.com/PostImage/\" + this.state.news.images}\n                                              alt=\"image\"\n                                              style={{width: 500, height: 400}}/>\n                                    </CContainer>\n                                </CJumbotron>\n                                <CListGroup>\n                                    <CListGroupItem key={1}>\n                                        {this.state.news.postdetails}\n                                    </CListGroupItem>\n                                    <CListGroupItem key={2}>\n                                        <h3> Post Conclusion:</h3>{this.state.news.postconclusion}\n                                    </CListGroupItem>\n\n                                </CListGroup>\n\n                            </CCardBody>\n\n                        </CCard>\n                    </CCol>\n\n\n        )\n    }\n\n\n}\n\nexport default NewsFeeds\n"]},"metadata":{},"sourceType":"module"}