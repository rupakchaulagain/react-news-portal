{"ast":null,"code":"import _defineProperty from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{CButton,CCard,CCardBody,CForm,CFormGroup,CInput,CLabel}from\"@coreui/react\";import*as axios from\"axios\";import CIcon from\"@coreui/icons-react\";import Cookies from\"universal-cookie\";var PollForm=/*#__PURE__*/function(_React$Component){_inherits(PollForm,_React$Component);var _super=_createSuper(PollForm);function PollForm(props){var _this;_classCallCheck(this,PollForm);_this=_super.call(this,props);_this.handleInputChange=function(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;_this.setState(_defineProperty({},name,value));};_this.handleFormSubmit=function(e){e.preventDefault();var cookies=new Cookies();var polls={polltitle:_this.state.polltitle};axios.post('https://frozen-refuge-74833.herokuapp.com/polls/',polls,{headers:{Authorization:cookies.get('token')}}).then(function(response){axios.get('http://localhost:3000/polls/',{headers:{Authorization:cookies.get('token')}}).then(function(response){console.log(response.data);var data=response.data;_this.props.updatePoll(data);});_this.props.manageTabController();_this.props.showAlert();}).catch(function(error){if(error.response){// Request made and server responded\nconsole.log(error.response);}// throw new Error('Sorry Internal Server Error')\nthis.showError(error.response);});};console.log(props);_this.state={polltitle:\"\"};return _this;}_createClass(PollForm,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(CCard,null,/*#__PURE__*/React.createElement(CCardBody,null,/*#__PURE__*/React.createElement(CForm,{onSubmit:this.handleFormSubmit},/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CLabel,{htmlFor:\"polltitle\"},\"Post tittle\"),/*#__PURE__*/React.createElement(CInput,{name:\"polltitle\",id:\"polltitle\",value:this.state.polltitle,onChange:this.handleInputChange,placeholder:\"Enter Post Tittle\",required:\"required\"})),/*#__PURE__*/React.createElement(CFormGroup,null,/*#__PURE__*/React.createElement(CButton,{type:\"submit\",size:\"sm\",color:\"primary\"},/*#__PURE__*/React.createElement(CIcon,{name:\"cil-scrubber\"}),\" Submit\")))));}}]);return PollForm;}(React.Component);export default PollForm;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/polls/PollForm.js"],"names":["React","CButton","CCard","CCardBody","CForm","CFormGroup","CInput","CLabel","axios","CIcon","Cookies","PollForm","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","cookies","polls","polltitle","state","post","headers","Authorization","get","then","response","console","log","data","updatePoll","manageTabController","showAlert","catch","error","showError","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {CButton, CCard, CCardBody, CForm, CFormGroup, CInput, CLabel,} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport CIcon from \"@coreui/icons-react\";\nimport Cookies from \"universal-cookie\";\n\nclass PollForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props)\n\n        this.state = {\n            polltitle: \"\"\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n\n            this.setState({\n                [name]: value\n            })\n\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        let polls = {\n            polltitle: this.state.polltitle\n        }\n\n        axios.post('https://frozen-refuge-74833.herokuapp.com/polls/', polls,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                },\n            })\n            .then(response => {\n\n                axios.get('http://localhost:3000/polls/',\n                    {\n                        headers: {\n                            Authorization: cookies.get('token'),\n                        },\n                    })\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updatePoll(data)\n\n                    })\n\n                this.props.manageTabController()\n                this.props.showAlert()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n\n    render() {\n        return (\n\n\n            <CCard>\n                <CCardBody>\n\n                    <CForm onSubmit={this.handleFormSubmit}>\n                        <CFormGroup>\n                            <CLabel htmlFor=\"polltitle\">Post tittle</CLabel>\n                            <CInput name=\"polltitle\" id=\"polltitle\"\n                                    value={this.state.polltitle}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Post Tittle\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                name=\"cil-scrubber\"/> Submit</CButton>\n                        </CFormGroup>\n\n                    </CForm>\n                </CCardBody>\n\n            </CCard>\n\n\n        )\n    }\n}\n\nexport default PollForm\n"]},"metadata":{},"sourceType":"module"}