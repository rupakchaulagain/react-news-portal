{"ast":null,"code":"import _defineProperty from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/jharna/src/views/news/NewsForm.js\";\nimport React from 'react';\nimport { CButton, CCard, CCardBody, CForm, CFormGroup, CInput, CLabel, CTextarea } from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport CIcon from \"@coreui/icons-react\";\nimport Cookies from \"universal-cookie\";\n\nvar NewsForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewsForm, _React$Component);\n\n  var _super = _createSuper(NewsForm);\n\n  function NewsForm(props) {\n    var _this;\n\n    _classCallCheck(this, NewsForm);\n\n    _this = _super.call(this, props);\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.imageUploader = function (e) {\n      e.preventDefault();\n      console.log(e.target.files);\n\n      _this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      var cookies = new Cookies(); // console.log(this.state.selectedFile)\n      //\n      // let news = {\n      //     posttitle: this.state.posttitle,\n      //     postcategory: this.state.postcategory,\n      //     postdetails: this.state.postdetails,\n      //     postconclusion: this.state.postconclusion,\n      // }\n\n      var formData = new FormData();\n      formData.append('images', _this.state.selectedFile);\n      formData.append('posttitle', _this.state.posttitle);\n      formData.append('postcategory', _this.state.postcategory);\n      formData.append('postdetails', _this.state.postdetails);\n      formData.append('postconclusion', _this.state.postconclusion);\n      axios.post('http://localhost:3000/posts/', formData, {\n        headers: {\n          Authorization: cookies.get('token') // 'Content-Type': 'multipart/form-data; boundary=' + formData._boundary\n\n        }\n      }).then(function (response) {\n        axios.get('http://localhost:3000/usersnews/').then(function (response) {\n          console.log(response.data);\n          var data = response.data;\n\n          _this.props.updateNews(data);\n\n          console.log(\"o/p\" + _this.state.newsList);\n        });\n\n        _this.props.manageTabController();\n\n        _this.props.showAlert();\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response);\n        } // throw new Error('Sorry Internal Server Error')\n\n\n        this.showError(error.response);\n      });\n    };\n\n    console.log(props);\n    _this.state = {\n      posttitle: \"\",\n      postcategory: \"\",\n      postdetails: \"\",\n      postconclusion: \"\",\n      uploading: false,\n      selectedFile: null\n    };\n    return _this;\n  }\n\n  _createClass(NewsForm, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CForm, {\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"posttitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, \"Post tittle\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"posttitle\",\n        id: \"posttitle\",\n        value: this.state.posttitle,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Tittle\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"postcategory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, \"Post Category\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"postcategory\",\n        id: \"postcategory\",\n        value: this.state.postcategory,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Category\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"postdetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 29\n        }\n      }, \"Post Details\"), /*#__PURE__*/React.createElement(CInput, {\n        id: \"postdetails\",\n        name: \"postdetails\",\n        value: this.state.postdetails,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"postconclusion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }, \"Post Conclusion\"), /*#__PURE__*/React.createElement(CTextarea, {\n        name: \"postconclusion\",\n        id: \"postconclusion\",\n        value: this.state.postconclusion,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Conclusion\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, \"Images\"), /*#__PURE__*/React.createElement(CInput, {\n        type: \"file\",\n        name: \"file\",\n        onChange: this.imageUploader,\n        placeholder: \"Enter Post Details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CButton, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-scrubber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 78\n        }\n      }), \" Submit\"), /*#__PURE__*/React.createElement(CButton, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 76\n        }\n      }), \" Reset\")))));\n    }\n  }]);\n\n  return NewsForm;\n}(React.Component);\n\nexport default NewsForm;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/news/NewsForm.js"],"names":["React","CButton","CCard","CCardBody","CForm","CFormGroup","CInput","CLabel","CTextarea","axios","CIcon","Cookies","NewsForm","props","handleInputChange","e","target","name","value","setState","imageUploader","preventDefault","console","log","files","selectedFile","handleFormSubmit","cookies","formData","FormData","append","state","posttitle","postcategory","postdetails","postconclusion","post","headers","Authorization","get","then","response","data","updateNews","newsList","manageTabController","showAlert","catch","error","showError","uploading","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {CButton, CCard, CCardBody, CForm, CFormGroup, CInput, CLabel, CTextarea,} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport CIcon from \"@coreui/icons-react\";\nimport Cookies from \"universal-cookie\";\n\nclass NewsForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props)\n\n        this.state = {\n            posttitle: \"\",\n            postcategory: \"\",\n            postdetails: \"\",\n            postconclusion: \"\",\n            uploading: false,\n            selectedFile: null,\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    imageUploader = (e) => {\n        e.preventDefault()\n\n        console.log(e.target.files)\n\n        this.setState({\n            selectedFile: e.target.files[0],\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n\n        // console.log(this.state.selectedFile)\n        //\n        // let news = {\n        //     posttitle: this.state.posttitle,\n        //     postcategory: this.state.postcategory,\n        //     postdetails: this.state.postdetails,\n        //     postconclusion: this.state.postconclusion,\n        // }\n\n        const formData = new FormData()\n        formData.append('images', this.state.selectedFile)\n        formData.append('posttitle', this.state.posttitle);\n        formData.append('postcategory', this.state.postcategory);\n        formData.append('postdetails', this.state.postdetails);\n        formData.append('postconclusion', this.state.postconclusion);\n\n\n        axios.post('http://localhost:3000/posts/',\n            formData,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                    // 'Content-Type': 'multipart/form-data; boundary=' + formData._boundary\n                },\n            })\n            .then(response => {\n\n                axios.get('http://localhost:3000/usersnews/')\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n\n                        console.log(\"o/p\" + this.state.newsList)\n                    })\n\n                this.props.manageTabController()\n\n                this.props.showAlert()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n\n    render() {\n        return (\n\n\n            <CCard>\n                <CCardBody>\n\n                    <CForm onSubmit={this.handleFormSubmit}>\n                        <CFormGroup>\n                            <CLabel htmlFor=\"posttitle\">Post tittle</CLabel>\n                            <CInput name=\"posttitle\" id=\"posttitle\"\n                                    value={this.state.posttitle}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Post Tittle\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"postcategory\">Post Category</CLabel>\n                            <CInput name=\"postcategory\" id=\"postcategory\"\n                                    value={this.state.postcategory}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Post Category\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"postdetails\">Post Details</CLabel>\n                            <CInput id=\"postdetails\" name=\"postdetails\"\n                                    value={this.state.postdetails}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Post Details\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"postconclusion\">Post Conclusion</CLabel>\n                            <CTextarea name=\"postconclusion\" id=\"postconclusion\"\n                                       value={this.state.postconclusion}\n                                       onChange={this.handleInputChange}\n                                       placeholder=\"Enter Post Conclusion\"\n                                       required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"images\">Images</CLabel>\n                            <CInput type=\"file\" name=\"file\" onChange={this.imageUploader}\n                                    placeholder=\"Enter Post Details\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                name=\"cil-scrubber\"/> Submit</CButton>\n                            <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\"/> Reset</CButton>\n                        </CFormGroup>\n\n                    </CForm>\n                </CCardBody>\n\n            </CCard>\n\n\n        )\n    }\n}\n\nexport default NewsForm\n"]},"metadata":{},"sourceType":"module"}