{"ast":null,"code":"import _slicedToArray from\"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{CDataTable,CDropdown,CDropdownItem,CDropdownMenu,CDropdownToggle}from\"@coreui/react\";import React,{useState}from\"react\";import DeleteModal from\"./modals/DeleteModal\";import DetailModal from\"./modals/DetailModal\";import EditModal from\"./modals/EditModal\";var fields=['notificationdate','polltitle','createdAt','updatedAt','actions'];var PollTable=function PollTable(props){var pollList=props.pollList;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),detailModal=_useState4[0],setDetailModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),editModal=_useState6[0],setEditModal=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),selectedItem=_useState8[0],setSelectedItem=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),editItem=_useState10[0],setEditItem=_useState10[1];var detailModalToggle=function detailModalToggle(id){setSelectedItem(id);setDetailModal(!detailModal);};var editModalToggle=function editModalToggle(id){setEditItem(id);setEditModal(!editModal);};var toggle=function toggle(id){setSelectedItem(id);setModal(!modal);};return/*#__PURE__*/React.createElement(React.Fragment,null,selectedItem?/*#__PURE__*/React.createElement(DetailModal,{selectedItem:selectedItem,detailModal:detailModal,detailModalToggle:detailModalToggle}):null,editItem?/*#__PURE__*/React.createElement(EditModal,{updatePoll:props.updatePoll,editItem:editItem,editModal:editModal,editModalToggle:editModalToggle}):null,/*#__PURE__*/React.createElement(DeleteModal,{showDeleteAlert:props.showDeleteAlert,updatePoll:props.updatePoll,selectedItem:selectedItem,modal:modal,toggle:toggle}),/*#__PURE__*/React.createElement(CDataTable,{items:pollList,fields:fields,bordered:true,itemsPerPage:10,pagination:true,scopedSlots:{'actions':function actions(item){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(CDropdown,{className:\"m-1 btn-group\"},/*#__PURE__*/React.createElement(CDropdownToggle,{color:\"primary\"},\"Actions\"),/*#__PURE__*/React.createElement(CDropdownMenu,null,/*#__PURE__*/React.createElement(CDropdownItem,{onClick:function onClick(){return detailModalToggle(item._id);}},\"View\"),/*#__PURE__*/React.createElement(CDropdownItem,{onClick:function onClick(){return editModalToggle(item._id);}},\"Edit\"),/*#__PURE__*/React.createElement(CDropdownItem,{key:item._id,onClick:function onClick(){return toggle(item._id);}},\"Delete\"))));}}}));};export default PollTable;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/polls/PollTable.js"],"names":["CDataTable","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","React","useState","DeleteModal","DetailModal","EditModal","fields","PollTable","props","pollList","modal","setModal","detailModal","setDetailModal","editModal","setEditModal","selectedItem","setSelectedItem","editItem","setEditItem","detailModalToggle","id","editModalToggle","toggle","updatePoll","showDeleteAlert","item","_id"],"mappings":"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","sourcesContent":["import {CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle} from \"@coreui/react\";\nimport React, {useState} from \"react\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport DetailModal from \"./modals/DetailModal\";\nimport EditModal from \"./modals/EditModal\";\n\nconst fields = [\n\n    'notificationdate',\n    'polltitle',\n    'createdAt',\n    'updatedAt',\n    'actions']\n\nconst PollTable = (props) => {\n\n    let pollList = props.pollList\n    const [modal, setModal] = useState(false);\n    const [detailModal, setDetailModal] = useState(false);\n    const [editModal, setEditModal] = useState(false);\n    const [selectedItem, setSelectedItem] = useState(false);\n    const [editItem, setEditItem] = useState(false);\n\n    const detailModalToggle = (id) => {\n        setSelectedItem(id)\n        setDetailModal(!detailModal);\n\n    }\n\n    const editModalToggle = (id) => {\n        setEditItem(id)\n        setEditModal(!editModal);\n\n    }\n\n    const toggle = (id) => {\n\n        setSelectedItem(id)\n        setModal(!modal);\n\n    }\n\n\n    return (\n        <React.Fragment>\n            {selectedItem ? <DetailModal\n                selectedItem={selectedItem}\n                detailModal={detailModal}\n                detailModalToggle={detailModalToggle}/> : null}\n\n            {editItem ? <EditModal\n                updatePoll={props.updatePoll}\n                editItem={editItem}\n                editModal={editModal}\n                editModalToggle={editModalToggle}/> : null}\n            <DeleteModal\n                showDeleteAlert={props.showDeleteAlert}\n                updatePoll={props.updatePoll}\n                selectedItem={selectedItem}\n                modal={modal}\n                toggle={toggle}/>\n\n            <CDataTable\n                items={pollList}\n                fields={fields}\n                bordered\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                    'actions':\n                        (item) => (\n                            <td>\n\n                                <CDropdown className=\"m-1 btn-group\">\n                                    <CDropdownToggle color=\"primary\">\n                                        Actions\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n\n                                        <CDropdownItem\n                                            onClick={() => detailModalToggle(item._id)}>View</CDropdownItem>\n\n                                        <CDropdownItem\n                                            onClick={() => editModalToggle(item._id)}>Edit</CDropdownItem>\n\n                                        <CDropdownItem\n                                            key={item._id}\n                                            onClick={() => toggle(item._id)}>Delete</CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n\n\n                            </td>\n                        )\n\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default PollTable\n"]},"metadata":{},"sourceType":"module"}