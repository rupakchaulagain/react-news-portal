{"ast":null,"code":"import _slicedToArray from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js\";\n\nimport { CBadge, CButton, CDataTable, CModal, CModalBody, CModalFooter, CModalHeader } from \"@coreui/react\";\nimport React, { useState } from \"react\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['productName', 'productCategory', 'productType', 'productQuantity', \"costPrice\", \"sellingPrice\", 'actions'];\n\nvar showDeleteModal = function showDeleteModal() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var toggle = function toggle() {\n    if (props.deleteModal) {\n      setModal(!modal);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CButton, {\n    onClick: toggle,\n    className: \"mr-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Launch demo modal\"), /*#__PURE__*/React.createElement(CModal, {\n    show: modal,\n    onClose: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CModalHeader, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Modal title\"), /*#__PURE__*/React.createElement(CModalBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Lorem ipsum dolor...\"), /*#__PURE__*/React.createElement(CModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Do Something\"), ' ', /*#__PURE__*/React.createElement(CButton, {\n    color: \"secondary\",\n    onClick: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nvar ProductTable = function ProductTable(props) {\n  console.log(props.productList);\n  var productList = props.productList;\n  console.log(\"table data--------\" + productList);\n  return /*#__PURE__*/React.createElement(CDataTable, {\n    items: productList,\n    fields: fields,\n    bordered: true,\n    itemsPerPage: 10,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }\n        }, item.status));\n      },\n      'actions': function actions(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          active: true,\n          block: true,\n          color: \"primary\",\n          \"aria-pressed\": \"true\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(CButton, {\n          key: item.id,\n          active: true,\n          block: true,\n          color: \"danger\",\n          \"aria-pressed\": \"true\",\n          onClick: showDeleteModal,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }\n        }, \"Delete\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ProductTable;","map":{"version":3,"sources":["/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js"],"names":["CBadge","CButton","CDataTable","CModal","CModalBody","CModalFooter","CModalHeader","React","useState","getBadge","status","fields","showDeleteModal","modal","setModal","toggle","props","deleteModal","ProductTable","console","log","productList","item","id"],"mappings":"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","sourcesContent":["import {CBadge, CButton, CDataTable, CModal, CModalBody, CModalFooter, CModalHeader} from \"@coreui/react\";\nimport React, {useState} from \"react\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active':\n      return 'success'\n    case 'Inactive':\n      return 'secondary'\n    case 'Pending':\n      return 'warning'\n    case 'Banned':\n      return 'danger'\n    default:\n      return 'primary'\n  }\n}\nconst fields = [\n  'productName',\n  'productCategory',\n  'productType',\n  'productQuantity',\n  \"costPrice\",\n  \"sellingPrice\",\n  'actions']\n\nconst showDeleteModal=()=>{\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => {\n    if (props.deleteModal) {\n      setModal(!modal);\n    }\n\n  }\n\n  return (\n    <>\n      <CButton\n        onClick={toggle}\n        className=\"mr-1\"\n      >Launch demo modal</CButton>\n      <CModal\n        show={modal}\n        onClose={toggle}\n      >\n        <CModalHeader closeButton>Modal title</CModalHeader>\n        <CModalBody>\n          Lorem ipsum dolor...\n        </CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\">Do Something</CButton>{' '}\n          <CButton\n            color=\"secondary\"\n            onClick={toggle}\n          >Cancel</CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n\n\n\n}\n\nconst ProductTable = (props) => {\n\n  console.log(props.productList)\n\n  let productList = props.productList\n\n  console.log(\"table data--------\" + productList)\n\n\n  return (\n    <CDataTable\n      items={productList}\n      fields={fields}\n      bordered\n      itemsPerPage={10}\n      pagination\n      scopedSlots={{\n        'status':\n          (item) => (\n            <td>\n              <CBadge color={getBadge(item.status)}>\n                {item.status}\n              </CBadge>\n            </td>\n          ),\n        'actions':\n          (item) => (\n            <td>\n              <CButton active block color=\"primary\" aria-pressed=\"true\">Edit</CButton>\n              <CButton key={item.id} active block color=\"danger\" aria-pressed=\"true\"\n                       onClick={showDeleteModal}>Delete</CButton>\n              {/*<CButton key={item.id} active block color=\"danger\" aria-pressed=\"true\"*/}\n              {/*         onClick={() => props.deleteProduct(item.id)}>Delete</CButton>*/}\n            </td>\n          )\n\n      }}\n    />\n  )\n}\n\nexport default ProductTable\n"]},"metadata":{},"sourceType":"module"}