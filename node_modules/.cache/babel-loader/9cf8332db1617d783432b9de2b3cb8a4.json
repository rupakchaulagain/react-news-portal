{"ast":null,"code":"import _defineProperty from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/jharna/src/views/news/modals/EditModal.js\";\nimport React from 'react';\nimport { CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader, CTextarea } from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\n\nvar EditModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditModal, _React$Component);\n\n  var _super = _createSuper(EditModal);\n\n  function EditModal(props) {\n    var _this;\n\n    _classCallCheck(this, EditModal);\n\n    _this = _super.call(this, props);\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      var cookies = new Cookies();\n      var news = {\n        posttitle: _this.state.posttitle,\n        postcategory: _this.state.postcategory,\n        postdetails: _this.state.postdetails,\n        postconclusion: _this.state.postconclusion\n      };\n      axios.put(\"https://frozen-refuge-74833.herokuapp.com/posts/\".concat(_this.state._id), news, {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        axios.get('https://frozen-refuge-74833.herokuapp.com/posts/', {\n          headers: {\n            Authorization: cookies.get('token')\n          }\n        }).then(function (response) {\n          console.log(response.data);\n          var data = response.data;\n\n          _this.props.updateNews(data);\n\n          console.log(\"o/p\" + _this.state.newsList);\n        });\n\n        _this.props.editModalToggle();\n      }).catch(function (error) {\n        if (error.response) {\n          // Request made and server responded\n          console.log(error.response);\n        } // throw new Error('Sorry Internal Server Error')\n\n\n        this.showError(error.response);\n      });\n    };\n\n    _this.state = {\n      news: {},\n      _id: _this.props.editItem,\n      posttitle: \"\",\n      postcategory: \"\",\n      postdetails: \"\",\n      postconclusion: \"\",\n      uploading: false,\n      file: null\n    };\n    return _this;\n  }\n\n  _createClass(EditModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cookies = new Cookies();\n      axios.get(\"https://frozen-refuge-74833.herokuapp.com/posts/\".concat(this.props.editItem), {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        var news = response.data;\n\n        _this2.setState({\n          posttitle: news.posttitle,\n          postcategory: news.postcategory,\n          postdetails: news.postdetails,\n          postconclusion: news.postconclusion\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CModal, {\n        size: 'xl',\n        show: this.props.editModal,\n        onClose: this.props.editModalToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CModalHeader, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"News Detail\"), /*#__PURE__*/React.createElement(CModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CForm, {\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"posttitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }\n      }, \"Post tittle\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"posttitle\",\n        id: \"posttitle\",\n        value: this.state.posttitle,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Tittle\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"postcategory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, \"Post Category\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"postcategory\",\n        id: \"postcategory\",\n        value: this.state.postcategory,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Category\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"postdetails\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }\n      }, \"Post Details\"), /*#__PURE__*/React.createElement(CInput, {\n        id: \"postdetails\",\n        name: \"postdetails\",\n        value: this.state.postdetails,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"postconclusion\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }\n      }, \"Post Conclusion\"), /*#__PURE__*/React.createElement(CTextarea, {\n        name: \"postconclusion\",\n        id: \"postconclusion\",\n        value: this.state.postconclusion,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Post Conclusion\",\n        required: \"required\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }, \"Images\"), /*#__PURE__*/React.createElement(CInput, {\n        type: \"file\",\n        name: \"files\",\n        onChange: this.imageUploader,\n        placeholder: \"Enter Post Details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CButton, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-scrubber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 82\n        }\n      }), \" Submit\"), /*#__PURE__*/React.createElement(CButton, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 80\n        }\n      }), \" Reset\"))))));\n    }\n  }]);\n\n  return EditModal;\n}(React.Component);\n\nexport default EditModal;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/news/modals/EditModal.js"],"names":["React","CButton","CForm","CFormGroup","CInput","CLabel","CModal","CModalBody","CModalHeader","CTextarea","axios","Cookies","CIcon","EditModal","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","cookies","news","posttitle","state","postcategory","postdetails","postconclusion","put","_id","headers","Authorization","get","then","response","console","log","data","updateNews","newsList","editModalToggle","catch","error","showError","editItem","uploading","file","editModal","imageUploader","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,UAA5D,EAAwEC,YAAxE,EAAsFC,SAAtF,QAAsG,eAAtG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;IAEMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAenBC,iBAfmB,GAeC,UAACC,CAAD,EAAO;AAAA,sBAEDA,CAAC,CAACC,MAFD;AAAA,UAEhBC,IAFgB,aAEhBA,IAFgB;AAAA,UAEVC,KAFU,aAEVA,KAFU;;AAGvB,YAAKC,QAAL,qBACKF,IADL,EACYC,KADZ;AAIH,KAtBkB;;AAAA,UAwBnBE,gBAxBmB,GAwBA,UAACL,CAAD,EAAO;AACtBA,MAAAA,CAAC,CAACM,cAAF;AAEA,UAAMC,OAAO,GAAG,IAAIZ,OAAJ,EAAhB;AAGA,UAAIa,IAAI,GAAG;AACPC,QAAAA,SAAS,EAAE,MAAKC,KAAL,CAAWD,SADf;AAEPE,QAAAA,YAAY,EAAE,MAAKD,KAAL,CAAWC,YAFlB;AAGPC,QAAAA,WAAW,EAAE,MAAKF,KAAL,CAAWE,WAHjB;AAIPC,QAAAA,cAAc,EAAE,MAAKH,KAAL,CAAWG;AAJpB,OAAX;AAQAnB,MAAAA,KAAK,CAACoB,GAAN,2DAA6D,MAAKJ,KAAL,CAAWK,GAAxE,GAA+EP,IAA/E,EACI;AACIQ,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEV,OAAO,CAACW,GAAR,CAAY,OAAZ;AADV;AADb,OADJ,EAMKC,IANL,CAMU,UAAAC,QAAQ,EAAI;AAEd1B,QAAAA,KAAK,CAACwB,GAAN,CAAU,kDAAV,EACI;AACIF,UAAAA,OAAO,EAAE;AAELC,YAAAA,aAAa,EAAEV,OAAO,CAACW,GAAR,CAAY,OAAZ;AAFV;AADb,SADJ,EAQKC,IARL,CAQU,UAAAC,QAAQ,EAAI;AAEdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,cAAMA,IAAI,GAAGH,QAAQ,CAACG,IAAtB;;AAEA,gBAAKzB,KAAL,CAAW0B,UAAX,CAAsBD,IAAtB;;AAEAF,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ,MAAKZ,KAAL,CAAWe,QAA/B;AACH,SAhBL;;AAkBA,cAAK3B,KAAL,CAAW4B,eAAX;AAEH,OA5BL,EA6BKC,KA7BL,CA6BW,UAAUC,KAAV,EAAiB;AACpB,YAAIA,KAAK,CAACR,QAAV,EAAoB;AAChB;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAACR,QAAlB;AACH,SAJmB,CAMpB;;;AACA,aAAKS,SAAL,CAAeD,KAAK,CAACR,QAArB;AACH,OArCL;AAuCH,KA7EkB;;AAGf,UAAKV,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE,EADG;AAETO,MAAAA,GAAG,EAAE,MAAKjB,KAAL,CAAWgC,QAFP;AAGTrB,MAAAA,SAAS,EAAE,EAHF;AAITE,MAAAA,YAAY,EAAE,EAJL;AAKTC,MAAAA,WAAW,EAAE,EALJ;AAMTC,MAAAA,cAAc,EAAE,EANP;AAOTkB,MAAAA,SAAS,EAAE,KAPF;AAQTC,MAAAA,IAAI,EAAE;AARG,KAAb;AAHe;AAalB;;;;wCAkEmB;AAAA;;AAChB,UAAMzB,OAAO,GAAG,IAAIZ,OAAJ,EAAhB;AAEAD,MAAAA,KAAK,CAACwB,GAAN,2DAA6D,KAAKpB,KAAL,CAAWgC,QAAxE,GACI;AACId,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEV,OAAO,CAACW,GAAR,CAAY,OAAZ;AADV;AADb,OADJ,EAOKC,IAPL,CAOU,UAAAC,QAAQ,EAAI;AAEd,YAAIZ,IAAI,GAAGY,QAAQ,CAACG,IAApB;;AACA,QAAA,MAAI,CAACnB,QAAL,CAAc;AACVK,UAAAA,SAAS,EAAED,IAAI,CAACC,SADN;AAEVE,UAAAA,YAAY,EAAEH,IAAI,CAACG,YAFT;AAGVC,UAAAA,WAAW,EAAEJ,IAAI,CAACI,WAHR;AAIVC,UAAAA,cAAc,EAAEL,IAAI,CAACK;AAJX,SAAd;AAOH,OAjBL;AAmBH;;;6BAEQ;AAEL,0BACI,uDACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,IAAd;AACQ,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWmC,SADzB;AAEQ,QAAA,OAAO,EAAE,KAAKnC,KAAL,CAAW4B,eAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,YAAD;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKrB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAGI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,WAAb;AAAyB,QAAA,EAAE,EAAC,WAA5B;AACQ,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWD,SAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAKV,iBAFvB;AAGQ,QAAA,WAAW,EAAC,mBAHpB;AAIQ,QAAA,QAAQ,EAAC,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,eAWI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,cAAb;AAA4B,QAAA,EAAE,EAAC,cAA/B;AACQ,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,YAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAKZ,iBAFvB;AAGQ,QAAA,WAAW,EAAC,qBAHpB;AAIQ,QAAA,QAAQ,EAAC,UAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAXJ,eAoBI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAyB,QAAA,IAAI,EAAC,aAA9B;AACQ,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWE,WAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAKb,iBAFvB;AAGQ,QAAA,WAAW,EAAC,oBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CApBJ,eA4BI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,gBAAhB;AAAiC,QAAA,EAAE,EAAC,gBAApC;AACW,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWG,cAD7B;AAEW,QAAA,QAAQ,EAAE,KAAKd,iBAF1B;AAGW,QAAA,WAAW,EAAC,uBAHvB;AAIW,QAAA,QAAQ,EAAC,UAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA5BJ,eAqCI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,QAAQ,EAAE,KAAKmC,aAAhD;AACQ,QAAA,WAAW,EAAC,oBADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CArCJ,eA2CI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAC,IAA5B;AAAiC,QAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiD,oBAAC,KAAD;AAC7C,QAAA,IAAI,EAAC,cADwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjD,YADJ,eAGI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+C,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/C,WAHJ,CA3CJ,CAFJ,CALJ,CADJ,CADJ;AAgEH;;;;EA1KmBlD,KAAK,CAACmD,S;;AA8K9B,eAAetC,SAAf","sourcesContent":["import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader, CTextarea} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\n\nclass EditModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            news: {},\n            _id: this.props.editItem,\n            posttitle: \"\",\n            postcategory: \"\",\n            postdetails: \"\",\n            postconclusion: \"\",\n            uploading: false,\n            file: null\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n\n        let news = {\n            posttitle: this.state.posttitle,\n            postcategory: this.state.postcategory,\n            postdetails: this.state.postdetails,\n            postconclusion: this.state.postconclusion,\n        }\n\n\n        axios.put(`https://frozen-refuge-74833.herokuapp.com/posts/${this.state._id}`, news,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                },\n            })\n            .then(response => {\n\n                axios.get('https://frozen-refuge-74833.herokuapp.com/posts/',\n                    {\n                        headers: {\n\n                            Authorization: cookies.get('token')\n                        }\n                    }\n                )\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n\n                        console.log(\"o/p\" + this.state.newsList)\n                    })\n\n                this.props.editModalToggle()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(`https://frozen-refuge-74833.herokuapp.com/posts/${this.props.editItem}`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let news = response.data\n                this.setState({\n                    posttitle: news.posttitle,\n                    postcategory: news.postcategory,\n                    postdetails: news.postdetails,\n                    postconclusion: news.postconclusion,\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.editModal}\n                        onClose={this.props.editModalToggle}\n                >\n                    <CModalHeader closeButton>News Detail</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n                            <CFormGroup>\n\n                                <CLabel htmlFor=\"posttitle\">Post tittle</CLabel>\n                                <CInput name=\"posttitle\" id=\"posttitle\"\n                                        value={this.state.posttitle}\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"Enter Post Tittle\"\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postcategory\">Post Category</CLabel>\n                                <CInput name=\"postcategory\" id=\"postcategory\"\n                                        value={this.state.postcategory}\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"Enter Post Category\"\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postdetails\">Post Details</CLabel>\n                                <CInput id=\"postdetails\" name=\"postdetails\"\n                                        value={this.state.postdetails}\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"Enter Post Details\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postconclusion\">Post Conclusion</CLabel>\n                                <CTextarea name=\"postconclusion\" id=\"postconclusion\"\n                                           value={this.state.postconclusion}\n                                           onChange={this.handleInputChange}\n                                           placeholder=\"Enter Post Conclusion\"\n                                           required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"images\">Images</CLabel>\n                                <CInput type=\"file\" name=\"files\" onChange={this.imageUploader}\n                                        placeholder=\"Enter Post Details\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                                <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\"/> Reset</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default EditModal\n"]},"metadata":{},"sourceType":"module"}