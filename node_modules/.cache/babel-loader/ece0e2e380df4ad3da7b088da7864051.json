{"ast":null,"code":"import _defineProperty from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product-category/ProductCategoryForm.js\";\nimport React from 'react';\nimport { CButton, CCard, CCardBody, CCardFooter, CCol, CFormGroup, CInput, CLabel, CRow, CSelect, CTextarea } from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport * as axios from \"axios\";\n\nvar ProductCategoryForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProductCategoryForm, _React$Component);\n\n  var _super = _createSuper(ProductCategoryForm);\n\n  function ProductCategoryForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProductCategoryForm);\n\n    _this = _super.call(this, props);\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      var productCategory = {\n        supplierId: _this.state.supplierId,\n        productCategoryName: _this.state.productCategoryName,\n        productCategoryDescription: _this.state.productCategoryDescription\n      };\n      axios.post('http://localhost:8080/api/v1/productC', productCategory) // .then(response => response.json())\n      .then(function (response) {\n        var productSearch = {\n          \"productCategory\": \"\",\n          \"productCode\": \"\",\n          \"productName\": \"\",\n          \"productType\": \"\"\n        };\n        var page = 1;\n        var size = 10;\n        axios.put('http://localhost:8080/api/v1/product/search?page=' + page + \"&size=\" + size, productSearch) // .then(response => response.json())\n        .then(function (response) {\n          console.log(response.data.responseDTOList);\n          var data = response.data.responseDTOList;\n\n          _this.props.updateProduct(data);\n        });\n      });\n    };\n\n    _this.state = {\n      supplierId: \"\",\n      productCategoryName: \"\",\n      productCategoryDescription: \"\",\n      supplierList: []\n    };\n    return _this;\n  }\n\n  _createClass(ProductCategoryForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:8080/api/v1/supplier/active/min') // .then(response => response.json())\n      .then(function (response) {\n        var data = response.data;\n\n        _this2.setState({\n          supplierList: data\n        });\n\n        console.log(_this2.state.supplierList);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(CRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(CCol, {\n        xs: \"12\",\n        sm: \"6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"supplierId\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      }, \"Supplier\"), /*#__PURE__*/React.createElement(CSelect, {\n        custom: true,\n        id: \"supplierId\",\n        name: \"supplierId\",\n        value: this.state.supplierId,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter your company name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, \"Please Select Supplier\"), this.state.supplierList.map(function (supplier) {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: supplier.value,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 23\n          }\n        }, supplier.label);\n      }))), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"productCategory\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, \"Product Category Name\"), /*#__PURE__*/React.createElement(CInput, {\n        name: \"productCategory\",\n        id: \"productCategory\",\n        value: this.state.productCategory,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Product Category\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"productDescription\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, \"Product Category Description\"), /*#__PURE__*/React.createElement(CTextarea, {\n        name: \"productDescription\",\n        id: \"productDescription\",\n        value: this.state.productDescription,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter Product Description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(CCardFooter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CButton, {\n        type: \"submit\",\n        onClick: this.handleFormSubmit,\n        size: \"sm\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-scrubber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 96\n        }\n      }), \" Submit\"), /*#__PURE__*/React.createElement(CButton, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 62\n        }\n      }), \" Reset\")))));\n    }\n  }]);\n\n  return ProductCategoryForm;\n}(React.Component);\n\nexport default ProductCategoryForm;","map":{"version":3,"sources":["/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product-category/ProductCategoryForm.js"],"names":["React","CButton","CCard","CCardBody","CCardFooter","CCol","CFormGroup","CInput","CLabel","CRow","CSelect","CTextarea","CIcon","axios","ProductCategoryForm","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","productCategory","supplierId","state","productCategoryName","productCategoryDescription","post","then","response","productSearch","page","size","put","console","log","data","responseDTOList","updateProduct","supplierList","get","map","supplier","label","productDescription","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,OADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,IALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,MARF,EASEC,IATF,EAUEC,OAVF,EAWEC,SAXF,QAYO,eAZP;AAaA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;IAEMC,mB;;;;;AACJ,+BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA0BnBC,iBA1BmB,GA0BC,UAACC,CAAD,EAAO;AAAA,sBAEHA,CAAC,CAACC,MAFC;AAAA,UAElBC,IAFkB,aAElBA,IAFkB;AAAA,UAEZC,KAFY,aAEZA,KAFY;;AAGzB,YAAKC,QAAL,qBACGF,IADH,EACUC,KADV;AAID,KAjCkB;;AAAA,UAmCnBE,gBAnCmB,GAmCA,UAACL,CAAD,EAAO;AACxBA,MAAAA,CAAC,CAACM,cAAF;AAEA,UAAIC,eAAe,GAAG;AACpBC,QAAAA,UAAU,EAAE,MAAKC,KAAL,CAAWD,UADH;AAEpBE,QAAAA,mBAAmB,EAAE,MAAKD,KAAL,CAAWC,mBAFZ;AAGpBC,QAAAA,0BAA0B,EAAC,MAAKF,KAAL,CAAWE;AAHlB,OAAtB;AAOAf,MAAAA,KAAK,CAACgB,IAAN,CAAW,uCAAX,EAAoDL,eAApD,EACE;AADF,OAEGM,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAEhB,YACEC,aAAa,GAAG;AACd,6BAAmB,EADL;AAEd,yBAAe,EAFD;AAGd,yBAAe,EAHD;AAId,yBAAe;AAJD,SADlB;AAQA,YAAIC,IAAI,GAAG,CAAX;AACA,YAAIC,IAAI,GAAG,EAAX;AAEArB,QAAAA,KAAK,CAACsB,GAAN,CAAU,sDAAsDF,IAAtD,GAA6D,QAA7D,GAAwEC,IAAlF,EAAwFF,aAAxF,EACE;AADF,SAEGF,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAEhBK,UAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,IAAT,CAAcC,eAA1B;AACA,cAAMD,IAAI,GAAGP,QAAQ,CAACO,IAAT,CAAcC,eAA3B;;AAEA,gBAAKxB,KAAL,CAAWyB,aAAX,CAAyBF,IAAzB;AACD,SARH;AAUD,OAzBH;AA+BD,KA5EkB;;AAGjB,UAAKZ,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,EADD;AAEXE,MAAAA,mBAAmB,EAAE,EAFV;AAGXC,MAAAA,0BAA0B,EAAC,EAHhB;AAIXa,MAAAA,YAAY,EAAE;AAJH,KAAb;AAHiB;AASlB;;;;wCAEmB;AAAA;;AAElB5B,MAAAA,KAAK,CAAC6B,GAAN,CAAU,kDAAV,EACE;AADF,OAEGZ,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChB,YAAMO,IAAI,GAAGP,QAAQ,CAACO,IAAtB;;AAEA,QAAA,MAAI,CAACjB,QAAL,CAAc;AACZoB,UAAAA,YAAY,EAAEH;AADF,SAAd;;AAGAF,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACX,KAAL,CAAWe,YAAvB;AACD,OATH;AAWD;;;6BAuDQ;AAAA;;AACP,0BAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAc,QAAA,EAAE,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,OAAD;AAAS,QAAA,MAAM,MAAf;AAAgB,QAAA,EAAE,EAAC,YAAnB;AAAgC,QAAA,IAAI,EAAC,YAArC;AACS,QAAA,KAAK,EAAE,KAAKf,KAAL,CAAWD,UAD3B;AAES,QAAA,QAAQ,EAAE,KAAKT,iBAFxB;AAGS,QAAA,WAAW,EAAC,yBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCALF,EAMG,KAAKU,KAAL,CAAWe,YAAX,CAAwBE,GAAxB,CAA4B,UAAAC,QAAQ,EAAI;AACvC,4BACE;AAAQ,UAAA,KAAK,EAAEA,QAAQ,CAACxB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgCwB,QAAQ,CAACC,KAAzC,CADF;AAGD,OAJA,CANH,CAFF,CAFF,eAoBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,iBAAb;AAA+B,QAAA,EAAE,EAAC,iBAAlC;AACQ,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWF,eAD1B;AAEQ,QAAA,QAAQ,EAAE,KAAKR,iBAFvB;AAGQ,QAAA,WAAW,EAAC,wBAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CApBF,eA4BE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,eAEE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,oBAAhB;AAAqC,QAAA,EAAE,EAAC,oBAAxC;AACW,QAAA,KAAK,EAAE,KAAKU,KAAL,CAAWoB,kBAD7B;AAEW,QAAA,QAAQ,EAAE,KAAK9B,iBAF1B;AAGW,QAAA,WAAW,EAAC,2BAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CA5BF,CADF,eAwCE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,OAAO,EAAE,KAAKM,gBAArC;AAAuD,QAAA,IAAI,EAAC,IAA5D;AAAiE,QAAA,KAAK,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiF,oBAAC,KAAD;AAC/E,QAAA,IAAI,EAAC,cAD0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjF,YADF,eAGE,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+C,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/C,WAHF,CAxCF,CADF,CAFF,CAFF;AA4DD;;;;EA7I+BtB,KAAK,CAAC+C,S;;AAgJxC,eAAejC,mBAAf","sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CFormGroup,\n  CInput,\n  CLabel,\n  CRow,\n  CSelect,\n  CTextarea,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport * as axios from \"axios\";\n\nclass ProductCategoryForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      supplierId: \"\",\n      productCategoryName: \"\",\n      productCategoryDescription:\"\",\n      supplierList: []\n    }\n  }\n\n  componentDidMount() {\n\n    axios.get('http://localhost:8080/api/v1/supplier/active/min')\n      // .then(response => response.json())\n      .then(response => {\n        const data = response.data\n\n        this.setState({\n          supplierList: data\n        })\n        console.log(this.state.supplierList)\n      })\n\n  }\n\n  handleInputChange = (e) => {\n\n    const {name, value} = e.target\n    this.setState({\n      [name]: value\n    })\n\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault()\n\n    let productCategory = {\n      supplierId: this.state.supplierId,\n      productCategoryName: this.state.productCategoryName,\n      productCategoryDescription:this.state.productCategoryDescription,\n\n    }\n\n    axios.post('http://localhost:8080/api/v1/productC', productCategory)\n      // .then(response => response.json())\n      .then(response => {\n\n        let\n          productSearch = {\n            \"productCategory\": \"\",\n            \"productCode\": \"\",\n            \"productName\": \"\",\n            \"productType\": \"\"\n          }\n\n        let page = 1\n        let size = 10\n\n        axios.put('http://localhost:8080/api/v1/product/search?page=' + page + \"&size=\" + size, productSearch)\n          // .then(response => response.json())\n          .then(response => {\n\n            console.log(response.data.responseDTOList)\n            const data = response.data.responseDTOList\n\n            this.props.updateProduct(data)\n          })\n\n      })\n\n\n\n\n\n  }\n\n\n  render() {\n    return (\n\n      <CRow>\n\n        <CCol xs=\"12\" sm=\"6\">\n          <CCard>\n            <CCardBody>\n\n              <CFormGroup>\n                <CLabel htmlFor=\"supplierId\">Supplier</CLabel>\n                <CSelect custom id=\"supplierId\" name=\"supplierId\"\n                         value={this.state.supplierId}\n                         onChange={this.handleInputChange}\n                         placeholder=\"Enter your company name\">\n\n                  <option value=\"-1\">Please Select Supplier</option>\n                  {this.state.supplierList.map(supplier => {\n                    return (\n                      <option value={supplier.value}>{supplier.label}</option>\n                    )\n                  })}\n\n                </CSelect>\n\n              </CFormGroup>\n\n              <CFormGroup>\n                <CLabel htmlFor=\"productCategory\">Product Category Name</CLabel>\n                <CInput name=\"productCategory\" id=\"productCategory\"\n                        value={this.state.productCategory}\n                        onChange={this.handleInputChange}\n                        placeholder=\"Enter Product Category\"/>\n              </CFormGroup>\n\n              <CFormGroup>\n                <CLabel htmlFor=\"productDescription\">Product Category Description</CLabel>\n                <CTextarea name=\"productDescription\" id=\"productDescription\"\n                           value={this.state.productDescription}\n                           onChange={this.handleInputChange}\n                           placeholder=\"Enter Product Description\"/>\n              </CFormGroup>\n\n\n            </CCardBody>\n\n            <CCardFooter>\n              <CButton type=\"submit\" onClick={this.handleFormSubmit} size=\"sm\" color=\"primary\"><CIcon\n                name=\"cil-scrubber\"/> Submit</CButton>\n              <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\"/> Reset</CButton>\n            </CCardFooter>\n\n          </CCard>\n        </CCol>\n\n\n\n      </CRow>\n\n\n    )\n  }\n}\n\nexport default ProductCategoryForm\n"]},"metadata":{},"sourceType":"module"}