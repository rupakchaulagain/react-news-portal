{"ast":null,"code":"import _slicedToArray from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rupak/Rupak/Rupesh/jharna/src/views/users/UserTable.js\";\n\nimport { CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport DetailModal from \"./modals/DetailModal\";\nimport EditModal from \"./modals/EditModal\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Y':\n      return 'success';\n\n    case 'N':\n      return 'secondary';\n\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['email', 'username', 'password', 'actions'];\n\nvar UserTable = function UserTable(props) {\n  var userList = props.userList;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      detailModal = _useState4[0],\n      setDetailModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editModal = _useState6[0],\n      setEditModal = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedItem = _useState8[0],\n      setSelectedItem = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editItem = _useState10[0],\n      setEditItem = _useState10[1];\n\n  var detailModalToggle = function detailModalToggle(id) {\n    setSelectedItem(id);\n    setDetailModal(!detailModal);\n  };\n\n  var editModalToggle = function editModalToggle(id) {\n    setEditItem(id);\n    setEditModal(!editModal);\n  };\n\n  var toggle = function toggle(id) {\n    setSelectedItem(id);\n    setModal(!modal);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, selectedItem ? /*#__PURE__*/React.createElement(DetailModal, {\n    selectedItem: selectedItem,\n    detailModal: detailModal,\n    detailModalToggle: detailModalToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }) : null, editItem ? /*#__PURE__*/React.createElement(EditModal, {\n    updateUser: props.updateUser,\n    editItem: editItem,\n    editModal: editModal,\n    editModalToggle: editModalToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(DeleteModal, {\n    showDeleteAlert: props.showDeleteAlert,\n    updateUser: props.updateUser,\n    selectedItem: selectedItem,\n    modal: modal,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CDataTable, {\n    items: userList,\n    fields: fields,\n    bordered: true,\n    itemsPerPage: 10,\n    pagination: true,\n    scopedSlots: {\n      'actions': function actions(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(CDropdown, {\n          className: \"m-1 btn-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(CDropdownToggle, {\n          color: \"primary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }\n        }, \"Actions\"), /*#__PURE__*/React.createElement(CDropdownMenu, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(CDropdownItem, {\n          onClick: function onClick() {\n            return detailModalToggle(item._id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 41\n          }\n        }, \"View\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n          onClick: function onClick() {\n            return editModalToggle(item._id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 41\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n          key: item._id,\n          onClick: function onClick() {\n            return toggle(item._id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 41\n          }\n        }, \"Delete\"))));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default UserTable;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/users/UserTable.js"],"names":["CDataTable","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","React","useState","DeleteModal","DetailModal","EditModal","getBadge","status","fields","UserTable","props","userList","modal","setModal","detailModal","setDetailModal","editModal","setEditModal","selectedItem","setSelectedItem","editItem","setEditItem","detailModalToggle","id","editModalToggle","toggle","updateUser","showDeleteAlert","item","_id"],"mappings":"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","sourcesContent":["import {CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle} from \"@coreui/react\";\nimport React, {useState} from \"react\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport DetailModal from \"./modals/DetailModal\";\nimport EditModal from \"./modals/EditModal\";\n\nconst getBadge = status => {\n    switch (status) {\n        case 'Y':\n            return 'success'\n        case 'N':\n            return 'secondary'\n        case 'Active':\n            return 'success'\n        case 'Inactive':\n            return 'secondary'\n        case 'Pending':\n            return 'warning'\n        case 'Banned':\n            return 'danger'\n        default:\n            return 'primary'\n    }\n}\n\nconst fields = [\n    \n    'email',\n    'username',\n    'password',\n    'actions']\n\nconst UserTable = (props) => {\n\n    let userList = props.userList\n    const [modal, setModal] = useState(false);\n    const [detailModal, setDetailModal] = useState(false);\n    const [editModal, setEditModal] = useState(false);\n    const [selectedItem, setSelectedItem] = useState(false);\n    const [editItem, setEditItem] = useState(false);\n\n    const detailModalToggle = (id) => {\n        setSelectedItem(id)\n        setDetailModal(!detailModal);\n\n    }\n\n    const editModalToggle = (id) => {\n        setEditItem(id)\n        setEditModal(!editModal);\n\n    }\n\n    const toggle = (id) => {\n\n        setSelectedItem(id)\n        setModal(!modal);\n\n    }\n\n\n    return (\n        <React.Fragment>\n            {selectedItem ? <DetailModal\n                selectedItem={selectedItem}\n                detailModal={detailModal}\n                detailModalToggle={detailModalToggle}/> : null}\n\n            {editItem ? <EditModal\n                updateUser={props.updateUser}\n                editItem={editItem}\n                editModal={editModal}\n                editModalToggle={editModalToggle}/> : null}\n            <DeleteModal\n                showDeleteAlert={props.showDeleteAlert}\n                updateUser={props.updateUser}\n                selectedItem={selectedItem}\n                modal={modal}\n                toggle={toggle}/>\n\n            <CDataTable\n                items={userList}\n                fields={fields}\n                bordered\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                    'actions':\n                        (item) => (\n                            <td>\n\n                                <CDropdown className=\"m-1 btn-group\">\n                                    <CDropdownToggle color=\"primary\">\n                                        Actions\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n\n                                        <CDropdownItem\n                                            onClick={() => detailModalToggle(item._id)}>View</CDropdownItem>\n\n                                        <CDropdownItem\n                                            onClick={() => editModalToggle(item._id)}>Edit</CDropdownItem>\n\n                                        <CDropdownItem\n                                            key={item._id}\n                                            onClick={() => toggle(item._id)}>Delete</CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n\n\n                            </td>\n                        )\n\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default UserTable\n"]},"metadata":{},"sourceType":"module"}