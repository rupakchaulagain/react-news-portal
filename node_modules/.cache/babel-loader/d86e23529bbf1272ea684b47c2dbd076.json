{"ast":null,"code":"import _slicedToArray from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js\";\n\nimport { CBadge, CButton, CDataTable, CModal, CModalBody, CModalFooter, CModalHeader } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DeleteModal from \"./DeleteModal\";\nimport DetailModal from \"./DetailModal\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['productName', 'productCategory', 'productType', 'productQuantity', \"costPrice\", \"sellingPrice\", 'actions'];\n\nvar ProductTable = function ProductTable(props) {\n  var productList = props.productList;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      detailModal = _useState4[0],\n      setDetailModal = _useState4[1];\n\n  var detailModalToggle = function detailModalToggle() {\n    setModal(!modal);\n  };\n\n  var toggle = function toggle() {\n    setModal(!modal);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DetailModal, {\n    modal: detailModal,\n    toggle: detailModalToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DeleteModal, {\n    modal: modal,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CDataTable, {\n    items: productList,\n    fields: fields,\n    bordered: true,\n    itemsPerPage: 10,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        }, item.status));\n      },\n      'actions': function actions(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          key: item.id,\n          active: true,\n          block: true,\n          color: \"success\",\n          \"aria-pressed\": \"true\",\n          onClick: detailModalToggle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, \"View\"), /*#__PURE__*/React.createElement(CButton, {\n          active: true,\n          block: true,\n          color: \"primary\",\n          \"aria-pressed\": \"true\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(CButton, {\n          key: item.id,\n          active: true,\n          block: true,\n          color: \"danger\",\n          \"aria-pressed\": \"true\",\n          onClick: toggle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        }, \"Delete\"));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProductTable;","map":{"version":3,"sources":["/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js"],"names":["CBadge","CButton","CDataTable","CModal","CModalBody","CModalFooter","CModalHeader","React","useState","DeleteModal","DetailModal","getBadge","status","fields","ProductTable","props","productList","modal","setModal","detailModal","setDetailModal","detailModalToggle","toggle","item","id"],"mappings":"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","sourcesContent":["import {CBadge, CButton, CDataTable, CModal, CModalBody, CModalFooter, CModalHeader} from \"@coreui/react\";\nimport React, {useState} from \"react\";\nimport DeleteModal from \"./DeleteModal\";\nimport DetailModal from \"./DetailModal\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active':\n      return 'success'\n    case 'Inactive':\n      return 'secondary'\n    case 'Pending':\n      return 'warning'\n    case 'Banned':\n      return 'danger'\n    default:\n      return 'primary'\n  }\n}\nconst fields = [\n  'productName',\n  'productCategory',\n  'productType',\n  'productQuantity',\n  \"costPrice\",\n  \"sellingPrice\",\n  'actions']\n\nconst ProductTable = (props) => {\n\n  let productList = props.productList\n  const [modal, setModal] = useState(false);\n  const [detailModal, setDetailModal] = useState(false);\n\n  const detailModalToggle = () => {\n    setModal(!modal);\n\n  }\n\n  const toggle = () => {\n    setModal(!modal);\n\n  }\n\n  return (\n    <React.Fragment>\n      <DetailModal\n        modal={detailModal}\n        toggle={detailModalToggle}/>\n      <DeleteModal\n        modal={modal}\n        toggle={toggle}/>\n\n      <CDataTable\n        items={productList}\n        fields={fields}\n        bordered\n        itemsPerPage={10}\n        pagination\n        scopedSlots={{\n          'status':\n            (item) => (\n              <td>\n                <CBadge color={getBadge(item.status)}>\n                  {item.status}\n                </CBadge>\n              </td>\n            ),\n          'actions':\n            (item) => (\n              <td>\n                <CButton key={item.id} active block color=\"success\" aria-pressed=\"true\"\n                         onClick={detailModalToggle}>View</CButton>\n                <CButton active block color=\"primary\" aria-pressed=\"true\">Edit</CButton>\n                <CButton key={item.id} active block color=\"danger\" aria-pressed=\"true\"\n                         onClick={toggle}>Delete</CButton>\n                {/*<CButton key={item.id} active block color=\"danger\" aria-pressed=\"true\"*/}\n                {/*         onClick={() => props.deleteProduct(item.id)}>Delete</CButton>*/}\n              </td>\n            )\n\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default ProductTable\n"]},"metadata":{},"sourceType":"module"}