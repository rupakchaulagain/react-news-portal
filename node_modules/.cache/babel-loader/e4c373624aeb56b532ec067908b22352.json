{"ast":null,"code":"import _defineProperty from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/jharna/src/views/news/modals/UpdateImageModal.js\";\nimport React from 'react';\nimport { CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader, CTextarea } from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\n\nvar UpdateImageModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(UpdateImageModal, _React$Component);\n\n  var _super = _createSuper(UpdateImageModal);\n\n  function UpdateImageModal(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateImageModal);\n\n    _this = _super.call(this, props);\n\n    _this.handleInputChange = function (e) {\n      console.log(name, \"===\", value);\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (e) {// e.preventDefault()\n      //\n      // const cookies = new Cookies();\n      //\n      //\n      // let news = {\n      //     posttitle: this.state.posttitle,\n      //     postcategory: this.state.postcategory,\n      //     postdetails: this.state.postdetails,\n      //     postconclusion: this.state.postconclusion,\n      // }\n      //\n      //\n      // axios.put(`http://localhost:3000/posts/${this.state._id}`, news,\n      //     {\n      //         headers: {\n      //             Authorization: cookies.get('token'),\n      //         },\n      //     })\n      //     .then(response => {\n      //\n      //         axios.get('http://localhost:3000/posts/',\n      //             {\n      //                 headers: {\n      //\n      //                     Authorization: cookies.get('token')\n      //                 }\n      //             }\n      //         )\n      //             .then(response => {\n      //\n      //                 console.log(response.data)\n      //                 const data = response.data\n      //\n      //                 this.props.updateNews(data)\n      //\n      //                 console.log(\"o/p\" + this.state.newsList)\n      //             })\n      //\n      //         this.props.editModalToggle()\n      //\n      //     })\n      //     .catch(function (error) {\n      //         if (error.response) {\n      //             // Request made and server responded\n      //             console.log(error.response);\n      //         }\n      //\n      //         // throw new Error('Sorry Internal Server Error')\n      //         this.showError(error.response)\n      //     })\n    };\n\n    _this.state = {\n      _id: _this.props.imageItem,\n      images: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(UpdateImageModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cookies = new Cookies();\n      axios.get(\"http://localhost:3000/posts/\".concat(this.props.imageItem), {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        var news = response.data;\n\n        _this2.setState({\n          images: news.images\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CModal, {\n        size: 'xl',\n        show: this.props.updateImageModal,\n        onClose: this.props.updateImageToggle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CModalHeader, {\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }\n      }, \"Update Image\"), /*#__PURE__*/React.createElement(CModalBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CForm, {\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CLabel, {\n        htmlFor: \"images\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 33\n        }\n      }, \"Images\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: \"https://frozen-refuge-74833.herokuapp.com/PostImage/\" + this.state.news.images,\n        style: {\n          width: 500,\n          height: 400\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(CInput, {\n        type: \"file\",\n        name: \"files\",\n        onChange: this.imageUploader,\n        placeholder: \"Enter Post Details\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      })), /*#__PURE__*/React.createElement(CFormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CButton, {\n        type: \"submit\",\n        size: \"sm\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-scrubber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 82\n        }\n      }), \" Submit\"), /*#__PURE__*/React.createElement(CButton, {\n        type: \"reset\",\n        size: \"sm\",\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CIcon, {\n        name: \"cil-ban\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 80\n        }\n      }), \" Reset\"))))));\n    }\n  }]);\n\n  return UpdateImageModal;\n}(React.Component);\n\nexport default UpdateImageModal;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/news/modals/UpdateImageModal.js"],"names":["React","CButton","CForm","CFormGroup","CInput","CLabel","CModal","CModalBody","CModalHeader","CTextarea","axios","Cookies","CIcon","UpdateImageModal","props","handleInputChange","e","console","log","name","value","target","setState","handleFormSubmit","state","_id","imageItem","images","cookies","get","headers","Authorization","then","response","news","data","updateImageModal","updateImageToggle","width","height","imageUploader","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,UAA5D,EAAwEC,YAAxE,EAAsFC,SAAtF,QAAsG,eAAtG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;IAEMC,gB;;;;;AACF,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAUnBC,iBAVmB,GAUC,UAACC,CAAD,EAAO;AAEvBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAAkB,KAAlB,EAAyBC,KAAzB;AAFuB,sBAGDJ,CAAC,CAACK,MAHD;AAAA,UAGhBF,IAHgB,aAGhBA,IAHgB;AAAA,UAGVC,KAHU,aAGVA,KAHU;;AAIvB,YAAKE,QAAL,qBACKH,IADL,EACYC,KADZ;AAIH,KAlBkB;;AAAA,UAoBnBG,gBApBmB,GAoBA,UAACP,CAAD,EAAO,CACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KAzEkB;;AAGf,UAAKQ,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,MAAKX,KAAL,CAAWY,SADP;AAETC,MAAAA,MAAM,EAAC;AAFE,KAAb;AAHe;AAQlB;;;;wCAmEmB;AAAA;;AAChB,UAAMC,OAAO,GAAG,IAAIjB,OAAJ,EAAhB;AAEAD,MAAAA,KAAK,CAACmB,GAAN,uCAAyC,KAAKf,KAAL,CAAWY,SAApD,GACI;AACII,QAAAA,OAAO,EAAE;AACLC,UAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAY,OAAZ;AADV;AADb,OADJ,EAOKG,IAPL,CAOU,UAAAC,QAAQ,EAAI;AAEd,YAAIC,IAAI,GAAGD,QAAQ,CAACE,IAApB;;AACA,QAAA,MAAI,CAACb,QAAL,CAAc;AACVK,UAAAA,MAAM,EAAEO,IAAI,CAACP;AADH,SAAd;AAKH,OAfL;AAiBH;;;6BAEQ;AAEL,0BACI,uDACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,IAAd;AACQ,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWsB,gBADzB;AAEQ,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,iBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,YAAD;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKd,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAK,QAAA,GAAG,EAAE,yDAAyD,KAAKC,KAAL,CAAWU,IAAX,CAAgBP,MAAnF;AACK,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,MAAM,EAAE;AAArB,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,QAAQ,EAAE,KAAKC,aAAhD;AACQ,QAAA,WAAW,EAAC,oBADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAFJ,eAWI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,IAAI,EAAC,IAA5B;AAAiC,QAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiD,oBAAC,KAAD;AAC7C,QAAA,IAAI,EAAC,cADwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAjD,YADJ,eAGI,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAC,OAAd;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+C,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/C,WAHJ,CAXJ,CAFJ,CALJ,CADJ,CADJ;AAgCH;;;;EApI0BxC,KAAK,CAACyC,S;;AAwIrC,eAAe5B,gBAAf","sourcesContent":["import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader, CTextarea} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\n\nclass UpdateImageModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            _id: this.props.imageItem,\n            images:\"\",\n\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        console.log(name, \"===\", value)\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        // e.preventDefault()\n        //\n        // const cookies = new Cookies();\n        //\n        //\n        // let news = {\n        //     posttitle: this.state.posttitle,\n        //     postcategory: this.state.postcategory,\n        //     postdetails: this.state.postdetails,\n        //     postconclusion: this.state.postconclusion,\n        // }\n        //\n        //\n        // axios.put(`http://localhost:3000/posts/${this.state._id}`, news,\n        //     {\n        //         headers: {\n        //             Authorization: cookies.get('token'),\n        //         },\n        //     })\n        //     .then(response => {\n        //\n        //         axios.get('http://localhost:3000/posts/',\n        //             {\n        //                 headers: {\n        //\n        //                     Authorization: cookies.get('token')\n        //                 }\n        //             }\n        //         )\n        //             .then(response => {\n        //\n        //                 console.log(response.data)\n        //                 const data = response.data\n        //\n        //                 this.props.updateNews(data)\n        //\n        //                 console.log(\"o/p\" + this.state.newsList)\n        //             })\n        //\n        //         this.props.editModalToggle()\n        //\n        //     })\n        //     .catch(function (error) {\n        //         if (error.response) {\n        //             // Request made and server responded\n        //             console.log(error.response);\n        //         }\n        //\n        //         // throw new Error('Sorry Internal Server Error')\n        //         this.showError(error.response)\n        //     })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(`http://localhost:3000/posts/${this.props.imageItem}`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let news = response.data\n                this.setState({\n                    images: news.images,\n\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.updateImageModal}\n                        onClose={this.props.updateImageToggle}\n                >\n                    <CModalHeader closeButton>Update Image</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"images\">Images</CLabel>\n\n                                <img src={\"https://frozen-refuge-74833.herokuapp.com/PostImage/\" + this.state.news.images}\n                                     style={{width: 500, height: 400}}/>\n                                <CInput type=\"file\" name=\"files\" onChange={this.imageUploader}\n                                        placeholder=\"Enter Post Details\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                                <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\"/> Reset</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default UpdateImageModal\n"]},"metadata":{},"sourceType":"module"}