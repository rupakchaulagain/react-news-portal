{"ast":null,"code":"import _slicedToArray from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product-category/ProductCategoryTable.js\";\n\nimport { CBadge, CButton, CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CModal, CModalBody, CModalFooter, CModalHeader } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DeleteModal from \"./DeleteModal\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['productName', 'productCategory', 'productType', 'productQuantity', \"costPrice\", \"sellingPrice\", 'actions'];\n\nvar ProductCategoryTable = function ProductCategoryTable(props) {\n  var productCategoryList = props.productCategoryList;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      detailModal = _useState4[0],\n      setDetailModal = _useState4[1];\n\n  var detailModalToggle = function detailModalToggle() {\n    setDetailModal(!detailModal);\n  };\n\n  var toggle = function toggle() {\n    setModal(!modal);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DeleteModal, {\n    modal: modal,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CDataTable, {\n    items: productCategoryList,\n    fields: fields,\n    bordered: true,\n    itemsPerPage: 10,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, item.status));\n      },\n      'actions': function actions(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CDropdown, {\n          className: \"m-1 btn-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CDropdownToggle, {\n          color: \"primary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }\n        }, \"Actions\"), /*#__PURE__*/React.createElement(CDropdownMenu, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(CDropdownItem, {\n          key: item.id,\n          onClick: detailModalToggle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        }, \"View\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n          key: item.id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n          key: item.id,\n          onClick: toggle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }\n        }, \"Delete\"))));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProductCategoryTable;","map":{"version":3,"sources":["/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product-category/ProductCategoryTable.js"],"names":["CBadge","CButton","CDataTable","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","CModal","CModalBody","CModalFooter","CModalHeader","React","useState","DeleteModal","getBadge","status","fields","ProductCategoryTable","props","productCategoryList","modal","setModal","detailModal","setDetailModal","detailModalToggle","toggle","item","id"],"mappings":";;;;;AAAA,SACEA,MADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,SAJF,EAIaC,aAJb,EAI4BC,aAJ5B,EAKEC,eALF,EAMEC,MANF,EAOEC,UAPF,EAQEC,YARF,EASEC,YATF,QAUO,eAVP;AAWA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,MAAM,EAAI;AACzB,UAAQA,MAAR;AACE,SAAK,QAAL;AACE,aAAO,SAAP;;AACF,SAAK,UAAL;AACE,aAAO,WAAP;;AACF,SAAK,SAAL;AACE,aAAO,SAAP;;AACF,SAAK,QAAL;AACE,aAAO,QAAP;;AACF;AACE,aAAO,SAAP;AAVJ;AAYD,CAbD;;AAcA,IAAMC,MAAM,GAAG,CACb,aADa,EAEb,iBAFa,EAGb,aAHa,EAIb,iBAJa,EAKb,WALa,EAMb,cANa,EAOb,SAPa,CAAf;;AASA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AAEtC,MAAIC,mBAAmB,GAAGD,KAAK,CAACC,mBAAhC;;AAFsC,kBAGZP,QAAQ,CAAC,KAAD,CAHI;AAAA;AAAA,MAG/BQ,KAH+B;AAAA,MAGxBC,QAHwB;;AAAA,mBAIAT,QAAQ,CAAC,KAAD,CAJR;AAAA;AAAA,MAI/BU,WAJ+B;AAAA,MAIlBC,cAJkB;;AAMtC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BD,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AAED,GAHD;;AAIA,MAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBJ,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AAED,GAHD;;AAMA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,KAApB;AACa,IAAA,MAAM,EAAEK,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEN,mBADT;AAEE,IAAA,MAAM,EAAEH,MAFV;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,YAAY,EAAE,EAJhB;AAKE,IAAA,UAAU,MALZ;AAME,IAAA,WAAW,EAAE;AACX,gBACE,gBAACU,IAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAEZ,QAAQ,CAACY,IAAI,CAACX,MAAN,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGW,IAAI,CAACX,MADR,CADF,CADF;AAAA,OAFS;AASX,iBACE,iBAACW,IAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE,oBAAC,SAAD;AAAW,UAAA,SAAS,EAAC,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE,oBAAC,aAAD;AACE,UAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,UAAA,OAAO,EAAEH,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME,oBAAC,aAAD;AACE,UAAA,GAAG,EAAEE,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eASE,oBAAC,aAAD;AACE,UAAA,GAAG,EAAED,IAAI,CAACC,EADZ;AAEE,UAAA,OAAO,EAAEF,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATF,CAJF,CAFF,CADF;AAAA;AAVS,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAmDD,CAnED;;AAqEA,eAAeR,oBAAf","sourcesContent":["import {\n  CBadge,\n  CButton,\n  CDataTable,\n  CDropdown, CDropdownItem, CDropdownMenu,\n  CDropdownToggle,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader\n} from \"@coreui/react\";\nimport React, {useState} from \"react\";\nimport DeleteModal from \"./DeleteModal\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Active':\n      return 'success'\n    case 'Inactive':\n      return 'secondary'\n    case 'Pending':\n      return 'warning'\n    case 'Banned':\n      return 'danger'\n    default:\n      return 'primary'\n  }\n}\nconst fields = [\n  'productName',\n  'productCategory',\n  'productType',\n  'productQuantity',\n  \"costPrice\",\n  \"sellingPrice\",\n  'actions']\n\nconst ProductCategoryTable = (props) => {\n\n  let productCategoryList = props.productCategoryList\n  const [modal, setModal] = useState(false);\n  const [detailModal, setDetailModal] = useState(false);\n\n  const detailModalToggle = () => {\n    setDetailModal(!detailModal);\n\n  }\n  const toggle = () => {\n    setModal(!modal);\n\n  }\n\n\n  return (\n    <React.Fragment>\n      <DeleteModal modal={modal}\n                   toggle={toggle}/>\n\n      <CDataTable\n        items={productCategoryList}\n        fields={fields}\n        bordered\n        itemsPerPage={10}\n        pagination\n        scopedSlots={{\n          'status':\n            (item) => (\n              <td>\n                <CBadge color={getBadge(item.status)}>\n                  {item.status}\n                </CBadge>\n              </td>\n            ),\n          'actions':\n            (item) => (\n              <td>\n\n                <CDropdown className=\"m-1 btn-group\">\n                  <CDropdownToggle color=\"primary\">\n                    Actions\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n\n                    <CDropdownItem\n                      key={item.id}\n                      onClick={detailModalToggle}>View</CDropdownItem>\n\n                    <CDropdownItem\n                      key={item.id}>Edit</CDropdownItem>\n\n                    <CDropdownItem\n                      key={item.id}\n                      onClick={toggle}>Delete</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n\n\n              </td>\n            )\n\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default ProductCategoryTable\n"]},"metadata":{},"sourceType":"module"}