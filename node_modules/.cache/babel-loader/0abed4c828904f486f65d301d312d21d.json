{"ast":null,"code":"import _slicedToArray from \"/home/rupak/Rupak/ReactJs/inventory-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js\";\n\nimport { CBadge, CButton, CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle } from \"@coreui/react\";\nimport React, { useState } from \"react\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport DetailModal from \"./modals/DetailModal\";\nimport * as axios from \"axios\";\n\nvar getBadge = function getBadge(status) {\n  switch (status) {\n    case 'Y':\n      return 'success';\n\n    case 'N':\n      return 'secondary';\n\n    case 'Active':\n      return 'success';\n\n    case 'Inactive':\n      return 'secondary';\n\n    case 'Pending':\n      return 'warning';\n\n    case 'Banned':\n      return 'danger';\n\n    default:\n      return 'primary';\n  }\n};\n\nvar fields = ['productName', 'productCategory', 'productType', 'productQuantity', 'costPrice', 'sellingPrice', 'status', 'actions'];\n\nvar ProductTable = function ProductTable(props) {\n  var productList = props.productList;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modal = _useState2[0],\n      setModal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedItem = _useState4[0],\n      setSelectedItem = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedProduct = _useState6[0],\n      setSelectedProduct = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      detailModal = _useState8[0],\n      setDetailModal = _useState8[1];\n\n  var detailModalToggle = function detailModalToggle(id) {\n    setSelectedItem(id);\n    setDetailModal(!detailModal);\n  };\n\n  var toggle = function toggle(id) {\n    setSelectedItem(id);\n    setModal(!modal);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, selectedItem ? /*#__PURE__*/React.createElement(DetailModal, {\n    selectedItem: selectedItem,\n    detailModal: detailModal,\n    detailModalToggle: detailModalToggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }\n  }) : null, /*#__PURE__*/React.createElement(DeleteModal, {\n    showDeleteAlert: props.showDeleteAlert,\n    updateProduct: props.updateProduct,\n    selectedItem: selectedItem,\n    modal: modal,\n    toggle: toggle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CDataTable, {\n    size: \"100\",\n    items: productList,\n    fields: fields,\n    bordered: true,\n    itemsPerPage: 10,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }, item.status === 'Y' ? 'Active' : 'Inactive'));\n      },\n      'actions': function actions(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(CDropdown, {\n          className: \"m-1 btn-group\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(CDropdownToggle, {\n          color: \"primary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }\n        }, \"Actions\"), /*#__PURE__*/React.createElement(CDropdownMenu, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(CDropdownItem, {\n          onClick: function onClick() {\n            return detailModalToggle(item.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }\n        }, \"View\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(CDropdownItem, {\n          onClick: function onClick() {\n            return toggle(item.id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        }, \"Delete\"))));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ProductTable;","map":{"version":3,"sources":["/home/rupak/Rupak/ReactJs/inventory-frontend/src/views/product/ProductTable.js"],"names":["CBadge","CButton","CDataTable","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","React","useState","DeleteModal","DetailModal","axios","getBadge","status","fields","ProductTable","props","productList","modal","setModal","selectedItem","setSelectedItem","selectedProduct","setSelectedProduct","detailModal","setDetailModal","detailModalToggle","id","toggle","showDeleteAlert","updateProduct","item"],"mappings":"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","sourcesContent":["import {CBadge, CButton, CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle} from \"@coreui/react\";\nimport React, {useState} from \"react\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport DetailModal from \"./modals/DetailModal\";\nimport * as axios from \"axios\";\n\nconst getBadge = status => {\n  switch (status) {\n    case 'Y':\n      return 'success'\n    case 'N':\n      return 'secondary'\n    case 'Active':\n      return 'success'\n    case 'Inactive':\n      return 'secondary'\n    case 'Pending':\n      return 'warning'\n    case 'Banned':\n      return 'danger'\n    default:\n      return 'primary'\n  }\n}\nconst fields = [\n  'productName',\n  'productCategory',\n  'productType',\n  'productQuantity',\n  'costPrice',\n  'sellingPrice',\n  'status',\n  'actions']\n\nconst ProductTable = (props) => {\n\n  let productList = props.productList\n  const [modal, setModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(false);\n  const [detailModal, setDetailModal] = useState(false);\n\n  const detailModalToggle = (id) => {\n\n    setSelectedItem(id)\n    setDetailModal(!detailModal);\n\n  }\n\n  const toggle = (id) => {\n\n    setSelectedItem(id)\n    setModal(!modal);\n\n  }\n\n  return (\n    <React.Fragment>\n\n      {selectedItem? <DetailModal\n        selectedItem={selectedItem}\n        detailModal={detailModal}\n        detailModalToggle={detailModalToggle}/>:null}\n\n\n      <DeleteModal\n        showDeleteAlert={props.showDeleteAlert}\n        updateProduct={props.updateProduct}\n        selectedItem={selectedItem}\n        modal={modal}\n        toggle={toggle}/>\n\n      <CDataTable\n        size=\"100\"\n        items={productList}\n        fields={fields}\n        bordered\n        itemsPerPage={10}\n        pagination\n        scopedSlots={{\n          'status':\n            (item) => (\n              <td>\n                <CBadge color={getBadge(item.status)}>\n                  {item.status==='Y'?'Active':'Inactive'}\n                </CBadge>\n              </td>\n            ),\n          'actions':\n            (item) => (\n              <td>\n\n                <CDropdown className=\"m-1 btn-group\">\n                  <CDropdownToggle color=\"primary\">\n                    Actions\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n\n                    <CDropdownItem\n                      onClick={()=>detailModalToggle(item.id)}>View</CDropdownItem>\n\n                    <CDropdownItem>Edit</CDropdownItem>\n\n                    <CDropdownItem\n                      onClick={()=>toggle(item.id)}>Delete</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n\n\n              </td>\n            )\n\n        }}\n      />\n    </React.Fragment>\n  )\n}\n\nexport default ProductTable\n"]},"metadata":{},"sourceType":"module"}