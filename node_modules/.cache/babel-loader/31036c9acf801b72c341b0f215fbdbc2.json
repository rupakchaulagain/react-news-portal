{"ast":null,"code":"import _classCallCheck from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/rupak/Rupak/Rupesh/jharna/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/rupak/Rupak/Rupesh/jharna/src/views/users/User.js\";\nimport React from 'react';\nimport { CCard, CCardBody, CCol, CNav, CNavItem, CNavLink, CRow, CTabContent, CTabPane, CTabs } from '@coreui/react';\nimport UserTable from \"./UserTable\";\nimport * as axios from \"axios\";\nimport SuccessAlert from \"../../ui/alerts/SuccessAlert\";\nimport DeleteAlert from \"../../ui/alerts/DeleteAlert\";\nimport Cookies from \"universal-cookie\";\nimport { BASE_URL } from \"../../api/Api\";\n\nvar User = /*#__PURE__*/function (_React$Component) {\n  _inherits(User, _React$Component);\n\n  var _super = _createSuper(User);\n\n  function User(props) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _super.call(this, props);\n\n    _this.updateUser = function (userList) {\n      _this.setState({\n        userList: userList\n      });\n    };\n\n    _this.showAlert = function () {\n      _this.setState({\n        showSuccessAlert: true\n      });\n    };\n\n    _this.showDeleteAlert = function () {\n      _this.setState({\n        showSuccessAlert: false,\n        showDeleteAlert: true\n      });\n    };\n\n    _this.showErrorAlert = function (errorMessage) {\n      _this.setState({\n        errorMessage: {\n          showErrorAlert: true,\n          message: errorMessage\n        }\n      });\n    };\n\n    _this.addTabController = function () {\n      _this.setState({\n        modal: {\n          addNavLink: true,\n          addTab: true,\n          manageNavLink: false,\n          manageTab: false\n        }\n      });\n    };\n\n    _this.manageTabController = function () {\n      _this.setState({\n        modal: {\n          addNavLink: false,\n          addTab: false,\n          manageNavLink: true,\n          manageTab: true\n        }\n      });\n    };\n\n    _this.state = {\n      userList: [],\n      deleteModal: false,\n      showSuccessAlert: false,\n      showDeleteAlert: false,\n      errorMessage: {\n        showErrorAlert: false,\n        message: ''\n      },\n      modal: {\n        addNavLink: false,\n        manageNavLink: true,\n        addTab: false,\n        manageTab: true\n      }\n    };\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var cookies = new Cookies();\n      axios.get(BASE_URL + '/users/me', {\n        headers: {\n          Authorization: cookies.get('token')\n        }\n      }).then(function (response) {\n        console.log(response.data);\n        var data = response.data;\n        var list = [];\n        list.push(data);\n\n        _this2.setState({\n          userList: list\n        });\n\n        console.log(\"o/p\" + _this2.state.userList);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, this.state.errorMessage.showErrorAlert === true ? /*#__PURE__*/React.createElement(DeleteAlert, {\n        message: this.state.errorMessage.showErrorAlert.errorMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }) : null, this.state.showSuccessAlert === true ? /*#__PURE__*/React.createElement(SuccessAlert, {\n        message: \"User is added Successfully...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }) : null, this.state.showDeleteAlert === true ? /*#__PURE__*/React.createElement(DeleteAlert, {\n        message: \"User is deleted...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }) : null, /*#__PURE__*/React.createElement(CRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CCol, {\n        xs: \"12\",\n        md: \"12\",\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CCard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CCardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CTabs, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CNav, {\n        variant: \"tabs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CNavItem, {\n        onClick: this.manageTabController,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CNavLink, {\n        active: this.state.modal.manageNavLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }\n      }, \"Manage\"))), /*#__PURE__*/React.createElement(CTabContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CTabPane, {\n        active: this.state.modal.addTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CTabPane, {\n        active: this.state.modal.manageTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(UserTable, {\n        showDeleteAlert: this.showDeleteAlert,\n        updateUser: this.updateUser,\n        deleteSupplier: this.deleteSupplier,\n        userList: this.state.userList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      })))))))));\n    }\n  }]);\n\n  return User;\n}(React.Component);\n\nexport default User;","map":{"version":3,"sources":["/home/rupak/Rupak/Rupesh/jharna/src/views/users/User.js"],"names":["React","CCard","CCardBody","CCol","CNav","CNavItem","CNavLink","CRow","CTabContent","CTabPane","CTabs","UserTable","axios","SuccessAlert","DeleteAlert","Cookies","BASE_URL","User","props","updateUser","userList","setState","showAlert","showSuccessAlert","showDeleteAlert","showErrorAlert","errorMessage","message","addTabController","modal","addNavLink","addTab","manageNavLink","manageTab","manageTabController","state","deleteModal","cookies","get","headers","Authorization","then","response","console","log","data","list","push","deleteSupplier","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgDC,QAAhD,EAA0DC,IAA1D,EAAgEC,WAAhE,EAA6EC,QAA7E,EAAuFC,KAAvF,QAAoG,eAApG;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;IAEMC,I;;;;;AAEJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAmDnBC,UAnDmB,GAmDN,UAACC,QAAD,EAAc;AAEzB,YAAKC,QAAL,CAAc;AACZD,QAAAA,QAAQ,EAAEA;AADE,OAAd;AAKD,KA1DkB;;AAAA,UA4DnBE,SA5DmB,GA4DP,YAAM;AAChB,YAAKD,QAAL,CAAc;AACZE,QAAAA,gBAAgB,EAAE;AADN,OAAd;AAID,KAjEkB;;AAAA,UAmEnBC,eAnEmB,GAmED,YAAM;AACtB,YAAKH,QAAL,CAAc;AACZE,QAAAA,gBAAgB,EAAE,KADN;AAEZC,QAAAA,eAAe,EAAE;AAFL,OAAd;AAKD,KAzEkB;;AAAA,UA2EnBC,cA3EmB,GA2EF,UAACC,YAAD,EAAkB;AACjC,YAAKL,QAAL,CAAc;AACZK,QAAAA,YAAY,EAAC;AACXD,UAAAA,cAAc,EAAE,IADL;AAEXE,UAAAA,OAAO,EAAED;AAFE;AADD,OAAd;AAOD,KAnFkB;;AAAA,UAqFnBE,gBArFmB,GAqFA,YAAM;AACvB,YAAKP,QAAL,CAAc;AACZQ,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,IADP;AAELC,UAAAA,MAAM,EAAE,IAFH;AAGLC,UAAAA,aAAa,EAAE,KAHV;AAILC,UAAAA,SAAS,EAAE;AAJN;AADK,OAAd;AAQD,KA9FkB;;AAAA,UAgGnBC,mBAhGmB,GAgGG,YAAM;AAC1B,YAAKb,QAAL,CAAc;AACZQ,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,KADP;AAELC,UAAAA,MAAM,EAAE,KAFH;AAGLC,UAAAA,aAAa,EAAE,IAHV;AAILC,UAAAA,SAAS,EAAE;AAJN;AADK,OAAd;AAQD,KAzGkB;;AAGjB,UAAKE,KAAL,GAAa;AACXf,MAAAA,QAAQ,EAAE,EADC;AAEXgB,MAAAA,WAAW,EAAE,KAFF;AAGXb,MAAAA,gBAAgB,EAAE,KAHP;AAIXC,MAAAA,eAAe,EAAE,KAJN;AAKXE,MAAAA,YAAY,EAAC;AACXD,QAAAA,cAAc,EAAE,KADL;AAEXE,QAAAA,OAAO,EAAE;AAFE,OALF;AASXE,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,KADP;AAELE,QAAAA,aAAa,EAAE,IAFV;AAGLD,QAAAA,MAAM,EAAE,KAHH;AAILE,QAAAA,SAAS,EAAE;AAJN;AATI,KAAb;AAHiB;AAuBlB;;;;wCAEmB;AAAA;;AAElB,UAAMI,OAAO,GAAG,IAAItB,OAAJ,EAAhB;AAEAH,MAAAA,KAAK,CAAC0B,GAAN,CAAUtB,QAAQ,GAAC,WAAnB,EACI;AACEuB,QAAAA,OAAO,EAAE;AAEPC,UAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAY,OAAZ;AAFR;AADX,OADJ,EAQGG,IARH,CAQQ,UAAAC,QAAQ,EAAI;AAEhBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,YAAMA,IAAI,GAAGH,QAAQ,CAACG,IAAtB;AACA,YAAIC,IAAI,GAAC,EAAT;AACAA,QAAAA,IAAI,CAACC,IAAL,CAAUF,IAAV;;AACA,QAAA,MAAI,CAACxB,QAAL,CAAc;AACZD,UAAAA,QAAQ,EAAG0B;AADC,SAAd;;AAIAH,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ,MAAI,CAACT,KAAL,CAAWf,QAA/B;AACD,OAnBH;AAoBD;;;6BA2DQ;AACP,0BAEE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKe,KAAL,CAAWT,YAAX,CAAwBD,cAAxB,KAA2C,IAA3C,gBACC,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE,KAAKU,KAAL,CAAWT,YAAX,CAAwBD,cAAxB,CAAuCC,YADlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGG,IAJN,EAMG,KAAKS,KAAL,CAAWZ,gBAAX,KAAgC,IAAhC,gBACC,oBAAC,YAAD;AACE,QAAA,OAAO,EAAE,+BADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGG,IATN,EAWG,KAAKY,KAAL,CAAWX,eAAX,KAA+B,IAA/B,gBACC,oBAAC,WAAD;AACE,QAAA,OAAO,EAAE,oBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGG,IAdN,eAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,IAAT;AAAc,QAAA,EAAE,EAAC,IAAjB;AAAsB,QAAA,SAAS,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKU,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWN,KAAX,CAAiBG,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF,eASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKG,KAAL,CAAWN,KAAX,CAAiBE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAKE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAWN,KAAX,CAAiBI,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,eAAe,EAAE,KAAKT,eADxB;AAEE,QAAA,UAAU,EAAE,KAAKL,UAFnB;AAGE,QAAA,cAAc,EAAE,KAAK6B,cAHvB;AAIE,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWf,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CATF,CADF,CADF,CADF,CADF,CAhBF,CAFF;AAqDD;;;;EApKgBpB,KAAK,CAACiD,S;;AAyKzB,eAAehC,IAAf","sourcesContent":["import React from 'react'\nimport {CCard, CCardBody, CCol, CNav, CNavItem, CNavLink, CRow, CTabContent, CTabPane, CTabs,} from '@coreui/react'\nimport UserTable from \"./UserTable\";\nimport * as axios from \"axios\";\nimport SuccessAlert from \"../../ui/alerts/SuccessAlert\";\nimport DeleteAlert from \"../../ui/alerts/DeleteAlert\";\nimport Cookies from \"universal-cookie\";\nimport {BASE_URL} from \"../../api/Api\";\n\nclass User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userList: [],\n      deleteModal: false,\n      showSuccessAlert: false,\n      showDeleteAlert: false,\n      errorMessage:{\n        showErrorAlert: false,\n        message: ''\n      },\n      modal: {\n        addNavLink: false,\n        manageNavLink: true,\n        addTab: false,\n        manageTab: true\n      }\n\n\n    }\n\n\n  }\n\n  componentDidMount() {\n\n    const cookies = new Cookies();\n\n    axios.get(BASE_URL+'/users/me',\n        {\n          headers: {\n\n            Authorization: cookies.get('token')\n          }\n        }\n    )\n      .then(response => {\n\n        console.log(response.data)\n        const data = response.data\n        let list=[]\n        list.push(data)\n        this.setState({\n          userList:  list\n        })\n\n        console.log(\"o/p\" + this.state.userList)\n      })\n  }\n\n  updateUser = (userList) => {\n\n    this.setState({\n      userList: userList\n    })\n\n\n  }\n\n  showAlert = () => {\n    this.setState({\n      showSuccessAlert: true\n    })\n\n  }\n\n  showDeleteAlert = () => {\n    this.setState({\n      showSuccessAlert: false,\n      showDeleteAlert: true\n    })\n\n  }\n\n  showErrorAlert = (errorMessage) => {\n    this.setState({\n      errorMessage:{\n        showErrorAlert: true,\n        message: errorMessage\n      }\n    })\n\n  }\n\n  addTabController = () => {\n    this.setState({\n      modal: {\n        addNavLink: true,\n        addTab: true,\n        manageNavLink: false,\n        manageTab: false\n      }\n    })\n  }\n\n  manageTabController = () => {\n    this.setState({\n      modal: {\n        addNavLink: false,\n        addTab: false,\n        manageNavLink: true,\n        manageTab: true\n      }\n    })\n  }\n\n\n  render() {\n    return (\n\n      <React.Fragment>\n        {this.state.errorMessage.showErrorAlert === true ?\n          <DeleteAlert\n            message={this.state.errorMessage.showErrorAlert.errorMessage}/>\n          : null}\n\n        {this.state.showSuccessAlert === true ?\n          <SuccessAlert\n            message={\"User is added Successfully...\"}/>\n          : null}\n\n        {this.state.showDeleteAlert === true ?\n          <DeleteAlert\n            message={\"User is deleted...\"}/>\n          : null}\n\n        <CRow>\n          <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\n            <CCard>\n              <CCardBody>\n                <CTabs>\n                  <CNav variant=\"tabs\">\n                    <CNavItem onClick={this.manageTabController}>\n                      <CNavLink active={this.state.modal.manageNavLink}>\n                        Manage\n                      </CNavLink>\n                    </CNavItem>\n                  </CNav>\n\n                  <CTabContent>\n\n                    <CTabPane active={this.state.modal.addTab}>\n                    </CTabPane>\n\n                    <CTabPane active={this.state.modal.manageTab}>\n                      <UserTable\n                        showDeleteAlert={this.showDeleteAlert}\n                        updateUser={this.updateUser}\n                        deleteSupplier={this.deleteSupplier}\n                        userList={this.state.userList}/>\n                    </CTabPane>\n\n                  </CTabContent>\n                </CTabs>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      </React.Fragment>\n    )\n  }\n\n\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}