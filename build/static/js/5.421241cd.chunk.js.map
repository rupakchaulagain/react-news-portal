{"version":3,"sources":["ui/alerts/SuccessAlert.js","ui/alerts/DeleteAlert.js","views/users/modals/DeleteModal.js","views/users/modals/DetailModal.js","views/users/modals/EditModal.js","views/users/UserTable.js","views/users/User.js"],"names":["SuccessAlert","props","color","closeButton","message","DeleteAlert","DeleteModal","handleDeleteBtn","id","cookies","Cookies","axios","headers","Authorization","get","then","response","console","log","data","updateNews","toggle","showDeleteAlert","show","this","modal","onClose","onClick","selectedItem","React","Component","DetailModal","modalCancelBtn","detailModalToggle","state","user","setState","size","detailModal","xs","sm","htmlFor","name","value","email","disabled","username","EditModal","handleInputChange","e","target","handleFormSubmit","preventDefault","password","list","push","updateUser","editModalToggle","catch","error","showError","_id","editItem","editModal","onSubmit","onChange","required","type","fields","UserTable","userList","useState","setModal","setDetailModal","setEditModal","setSelectedItem","setEditItem","Fragment","items","bordered","itemsPerPage","pagination","scopedSlots","item","className","key","User","showAlert","showSuccessAlert","showErrorAlert","errorMessage","addTabController","addNavLink","addTab","manageNavLink","manageTab","manageTabController","deleteModal","md","variant","active","deleteSupplier"],"mappings":"kHAAA,4BAceA,IAXI,SAACC,GAElB,OACE,kBAAC,IAAD,CAAQC,MAAM,UACNC,aAAW,GAChBF,EAAMG,W,iCCRb,4BAeeC,IAZG,SAACJ,GAEjB,OACE,kBAAC,IAAD,CAAQC,MAAM,SACNC,aAAW,GAChBF,EAAMG,W,6HC2DEE,E,4MA5DXC,gBAAkB,SAACC,GAGf,IAAMC,EAAU,IAAIC,IAEpBC,SAAA,sCAA4CH,GACxC,CACII,QAAS,CAELC,cAAeJ,EAAQK,IAAI,YAIlCC,MAAK,SAAAC,GAEFL,MAAU,oCACLI,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,EAASG,MACrB,IAAMA,EAAOH,EAASG,KAEtB,EAAKlB,MAAMmB,WAAWD,MAG9B,EAAKlB,MAAMoB,SAEX,EAAKpB,MAAMqB,sB,uDAOb,IAAD,OAEL,OACI,oCACI,kBAAC,IAAD,CACIC,KAAMC,KAAKvB,MAAMwB,MACjBC,QAASF,KAAKvB,MAAMoB,QAEpB,kBAAC,IAAD,CAAclB,aAAW,GAAzB,kBACA,kBAAC,IAAD,qCAGA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACID,MAAM,YACNyB,QAASH,KAAKvB,MAAMoB,QAFxB,UAGkB,IAClB,kBAAC,IAAD,CAASM,QAAS,kBAAM,EAAKpB,gBAAgB,EAAKN,MAAM2B,eAC/C1B,MAAM,UADf,iB,GArDE2B,IAAMC,WCwFjBC,E,kDA5EX,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IA0BV+B,eAAiB,WAEb,EAAK/B,MAAM2B,aAAa,KACxB,EAAK3B,MAAMgC,qBA3BX,EAAKC,MAAQ,CACTC,KAAM,IAJK,E,iEAQG,IAAD,OACX1B,EAAU,IAAIC,IAEpBC,MAAA,qDACI,CACIC,QAAS,CACLC,cAAeJ,EAAQK,IAAI,YAIlCC,MAAK,SAAAC,GAEF,EAAKoB,SAAS,CACVD,KAAMnB,EAASG,Y,+BAc3B,OACI,oCACI,kBAAC,IAAD,CAAQkB,KAAM,KACNd,KAAMC,KAAKvB,MAAMqC,YACjBZ,QAASF,KAAKvB,MAAMgC,mBAExB,kBAAC,IAAD,CAAc9B,aAAW,GAAzB,eACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAMoC,GAAG,KAAKC,GAAG,KACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,QAAQ,aAAhB,SACA,kBAAC,IAAD,CAAQC,KAAK,YACLC,MAAOnB,KAAKU,MAAMC,KAAKS,MAAOC,SAAS,cAEnD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQJ,QAAQ,mBAAhB,YACA,kBAAC,IAAD,CAAQC,KAAK,eACLC,MAAOnB,KAAKU,MAAMC,KAAKW,SAAUD,SAAS,yB,GA3DpEhB,IAAMC,W,iBCkIjBiB,E,kDA3IX,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IAUV+C,kBAAoB,SAACC,GAAO,IAAD,EAEDA,EAAEC,OAAjBR,EAFgB,EAEhBA,KAAMC,EAFU,EAEVA,MACb,EAAKP,SAAL,eACKM,EAAOC,KAfG,EAoBnBQ,iBAAmB,SAACF,GAChBA,EAAEG,iBAEF,IAAM3C,EAAU,IAAIC,IAEhByB,EAAO,CACPS,MAAO,EAAKV,MAAMU,MAClBS,SAAU,EAAKnB,MAAMmB,UAIzB1C,MAAA,qDAAgEwB,EAC5D,CACIvB,QAAS,CACLC,cAAeJ,EAAQK,IAAI,YAGlCC,MAAK,SAAAC,GAEFL,MAAU,qDACN,CACIC,QAAS,CAELC,cAAeJ,EAAQK,IAAI,YAIlCC,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,EAASG,MACrB,IAAMA,EAAOH,EAASG,KAClBmC,EAAK,GACTA,EAAKC,KAAKpC,GAEV,EAAKlB,MAAMuD,WAAWF,MAI9B,EAAKrD,MAAMwD,qBAGdC,OAAM,SAAUC,GACTA,EAAM3C,UAENC,QAAQC,IAAIyC,EAAM3C,UAItBQ,KAAKoC,UAAUD,EAAM3C,cAjE7B,EAAKkB,MAAQ,CACTC,KAAM,GACN0B,IAAK,EAAK5D,MAAM6D,SAChBlB,MAAO,GACPS,SAAU,IAPC,E,gEAyEE,IAAD,OACV5C,EAAU,IAAIC,IAEpBC,MAAA,qDACI,CACIC,QAAS,CACLC,cAAeJ,EAAQK,IAAI,YAIlCC,MAAK,SAAAC,GAEF,IAAImB,EAAOnB,EAASG,KACpB,EAAKiB,SAAS,CACVQ,MAAOT,EAAKS,MACZS,SAAUlB,EAAKkB,gB,+BAS3B,OACI,oCACI,kBAAC,IAAD,CAAQhB,KAAM,KACNd,KAAMC,KAAKvB,MAAM8D,UACjBrC,QAASF,KAAKvB,MAAMwD,iBAExB,kBAAC,IAAD,CAActD,aAAW,GAAzB,eACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAO6D,SAAUxC,KAAK2B,kBAClB,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAQV,QAAQ,SAAhB,SACA,kBAAC,IAAD,CAAQC,KAAK,QAAQlC,GAAG,QAChBmC,MAAOnB,KAAKU,MAAMU,MAClBqB,SAAUzC,KAAKwB,kBACfkB,SAAS,cAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQzB,QAAQ,gBAAhB,YACA,kBAAC,IAAD,CAAQC,KAAK,WAAWlC,GAAG,WACnBmC,MAAOnB,KAAKU,MAAMmB,SAClBY,SAAUzC,KAAKwB,kBACfkB,SAAS,cAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASC,KAAK,SAAS9B,KAAK,KAAKnC,MAAM,WAAU,kBAAC,IAAD,CAC7CwC,KAAK,iBADT,oB,GA9HRb,IAAMC,WCAxBsC,EAAS,CAEX,QACA,WACA,WACA,WAyFWC,EAvFG,SAACpE,GAEf,IAAIqE,EAAWrE,EAAMqE,SAFI,EAGCC,oBAAS,GAHV,mBAGlB9C,EAHkB,KAGX+C,EAHW,OAIaD,oBAAS,GAJtB,mBAIlBjC,EAJkB,KAILmC,EAJK,OAKSF,oBAAS,GALlB,mBAKlBR,EALkB,KAKPW,EALO,OAMeH,oBAAS,GANxB,mBAMlB3C,EANkB,KAMJ+C,EANI,OAOOJ,oBAAS,GAPhB,mBAOlBT,EAPkB,KAORc,EAPQ,KASnB3C,EAAoB,SAACzB,GACvBmE,EAAgBnE,GAChBiE,GAAgBnC,IAIdmB,EAAkB,SAACjD,GACrBoE,EAAYpE,GACZkE,GAAcX,IAIZ1C,EAAS,SAACb,GAEZmE,EAAgBnE,GAChBgE,GAAU/C,IAKd,OACI,kBAAC,IAAMoD,SAAP,KACKjD,EAAe,kBAAC,EAAD,CACZA,aAAcA,EACdU,YAAaA,EACbL,kBAAmBA,IAAuB,KAE7C6B,EAAW,kBAAC,EAAD,CACRN,WAAYvD,EAAMuD,WAClBM,SAAUA,EACVC,UAAWA,EACXN,gBAAiBA,IAAqB,KAC1C,kBAAC,EAAD,CACInC,gBAAiBrB,EAAMqB,gBACvBkC,WAAYvD,EAAMuD,WAClB5B,aAAcA,EACdH,MAAOA,EACPJ,OAAQA,IAEZ,kBAAC,IAAD,CACIyD,MAAOR,EACPF,OAAQA,EACRW,UAAQ,EACRC,aAAc,GACdC,YAAU,EACVC,YAAa,CACT,QACI,SAACC,GAAD,OACI,4BAEI,kBAAC,IAAD,CAAWC,UAAU,iBACjB,kBAAC,IAAD,CAAiBlF,MAAM,WAAvB,WAGA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACIyB,QAAS,kBAAMM,EAAkBkD,EAAKtB,OAD1C,QAGA,kBAAC,IAAD,CACIlC,QAAS,kBAAM8B,EAAgB0B,EAAKtB,OADxC,QAGA,kBAAC,IAAD,CACIwB,IAAKF,EAAKtB,IACVlC,QAAS,kBAAMN,EAAO8D,EAAKtB,OAF/B,mB,kBC5ElCyB,E,kDAEJ,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IAkDRuD,WAAa,SAACc,GAEZ,EAAKlC,SAAS,CACZkC,SAAUA,KAtDK,EA4DnBiB,UAAY,WACV,EAAKnD,SAAS,CACZoD,kBAAkB,KA9DH,EAmEnBlE,gBAAkB,WAChB,EAAKc,SAAS,CACZoD,kBAAkB,EAClBlE,iBAAiB,KAtEF,EA2EnBmE,eAAiB,SAACC,GAChB,EAAKtD,SAAS,CACZsD,aAAa,CACXD,gBAAgB,EAChBrF,QAASsF,MA/EI,EAqFnBC,iBAAmB,WACjB,EAAKvD,SAAS,CACZX,MAAO,CACLmE,YAAY,EACZC,QAAQ,EACRC,eAAe,EACfC,WAAW,MA3FE,EAgGnBC,oBAAsB,WACpB,EAAK5D,SAAS,CACZX,MAAO,CACLmE,YAAY,EACZC,QAAQ,EACRC,eAAe,EACfC,WAAW,MAnGf,EAAK7D,MAAQ,CACXoC,SAAU,GACV2B,aAAa,EACbT,kBAAkB,EAClBlE,iBAAiB,EACjBoE,aAAa,CACXD,gBAAgB,EAChBrF,QAAS,IAEXqB,MAAO,CACLmE,YAAY,EACZE,eAAe,EACfD,QAAQ,EACRE,WAAW,IAhBE,E,gEAyBE,IAAD,OAEZtF,EAAU,IAAIC,IAEpBC,MAAU,qDACN,CACEC,QAAS,CAEPC,cAAeJ,EAAQK,IAAI,YAIhCC,MAAK,SAAAC,GAEJC,QAAQC,IAAIF,EAASG,MACrB,IAAMA,EAAOH,EAASG,KAClBmC,EAAK,GACTA,EAAKC,KAAKpC,GACV,EAAKiB,SAAS,CACZkC,SAAWhB,IAGbrC,QAAQC,IAAI,MAAQ,EAAKgB,MAAMoC,e,+BA8DnC,OAEE,kBAAC,IAAMO,SAAP,MAC8C,IAA3CrD,KAAKU,MAAMwD,aAAaD,eACvB,kBAACpF,EAAA,EAAD,CACED,QAASoB,KAAKU,MAAMwD,aAAaD,eAAeC,eAChD,MAE6B,IAAhClE,KAAKU,MAAMsD,iBACV,kBAACxF,EAAA,EAAD,CACEI,QAAS,kCACT,MAE4B,IAA/BoB,KAAKU,MAAMZ,gBACV,kBAACjB,EAAA,EAAD,CACED,QAAS,uBACT,KAEJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMmC,GAAG,KAAK2D,GAAG,KAAKd,UAAU,QAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAMe,QAAQ,QACZ,kBAAC,IAAD,CAAUxE,QAASH,KAAKwE,qBACtB,kBAAC,IAAD,CAAUI,OAAQ5E,KAAKU,MAAMT,MAAMqE,eAAnC,YAMJ,kBAAC,KAAD,KAEE,kBAAC,KAAD,CAAUM,OAAQ5E,KAAKU,MAAMT,MAAMoE,SAGnC,kBAAC,KAAD,CAAUO,OAAQ5E,KAAKU,MAAMT,MAAMsE,WACjC,kBAAC,EAAD,CACEzE,gBAAiBE,KAAKF,gBACtBkC,WAAYhC,KAAKgC,WACjB6C,eAAgB7E,KAAK6E,eACrB/B,SAAU9C,KAAKU,MAAMoC,uB,GAxJ1BzC,IAAMC,WAyKVwD","file":"static/js/5.421241cd.chunk.js","sourcesContent":["import React from \"react\"\nimport {CAlert} from \"@coreui/react\";\n\nconst SuccessAlert=(props)=>{\n\n  return(\n    <CAlert color=\"success\"\n            closeButton>\n      {props.message}\n    </CAlert>\n  )\n\n}\n\nexport default SuccessAlert\n","import React from \"react\"\nimport {CAlert} from \"@coreui/react\";\n\nconst DeleteAlert=(props)=>{\n\n  return(\n    <CAlert color=\"danger\"\n            closeButton>\n      {props.message}\n    </CAlert>\n\n  )\n\n}\n\nexport default DeleteAlert\n","import React from 'react'\nimport {CButton, CModal, CModalBody, CModalFooter, CModalHeader} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nclass DeleteModal extends React.Component {\n\n    handleDeleteBtn = (id) => {\n\n\n        const cookies = new Cookies();\n\n        axios.delete(`http://localhost:3000/posts/${id}`,\n            {\n                headers: {\n\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                axios.get('http://localhost:3000/usersnews/')\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n                    })\n\n                this.props.toggle()\n\n                this.props.showDeleteAlert()\n\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal\n                    show={this.props.modal}\n                    onClose={this.props.toggle}\n                >\n                    <CModalHeader closeButton>Delete Product</CModalHeader>\n                    <CModalBody>\n                        Are you sure want to delete?\n                    </CModalBody>\n                    <CModalFooter>\n\n                        <CButton\n                            color=\"secondary\"\n                            onClick={this.props.toggle}\n                        >Cancel</CButton>{' '}\n                        <CButton onClick={() => this.handleDeleteBtn(this.props.selectedItem)}\n                                 color=\"danger\">Delete</CButton>\n                    </CModalFooter>\n                </CModal>\n            </>\n        )\n    }\n}\n\nexport default DeleteModal\n","import React from 'react'\nimport {\n    CCard,\n    CCardBody,\n    CCol,\n    CFormGroup,\n    CInput,\n    CLabel,\n    CModal,\n    CModalBody,\n    CModalHeader,\n    CRow\n} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nclass DetailModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {}\n        }\n    }\n\n    componentWillMount() {\n        const cookies = new Cookies();\n\n        axios.get(`https://frozen-refuge-74833.herokuapp.com/users/me`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                this.setState({\n                    user: response.data\n                })\n\n            })\n    }\n\n    modalCancelBtn = () => {\n\n        this.props.selectedItem=null\n        this.props.detailModalToggle()\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.detailModal}\n                        onClose={this.props.detailModalToggle}\n                >\n                    <CModalHeader closeButton>News Detail</CModalHeader>\n                    <CModalBody>\n\n                        <CRow>\n\n                            <CCol xs=\"12\" sm=\"6\">\n                                <CCard>\n                                    <CCardBody>\n\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"posttitle\">Email</CLabel>\n                                            <CInput name=\"posttitle\"\n                                                    value={this.state.user.email} disabled=\"disabled\"/>\n                                        </CFormGroup>\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"productCategory\">Username</CLabel>\n                                            <CInput name=\"postcategory\"\n                                                    value={this.state.user.username} disabled=\"disabled\"/>\n                                        </CFormGroup>\n\n                                    </CCardBody>\n\n                                </CCard>\n                            </CCol>\n\n                        </CRow>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default DetailModal\n","import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\n\nclass EditModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: {},\n            _id: this.props.editItem,\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        let user = {\n            email: this.state.email,\n            password: this.state.password\n        }\n\n\n        axios.put(`https://frozen-refuge-74833.herokuapp.com/users/me`, user,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                },\n            })\n            .then(response => {\n\n                axios.get('https://frozen-refuge-74833.herokuapp.com/users/me',\n                    {\n                        headers: {\n\n                            Authorization: cookies.get('token')\n                        }\n                    }\n                )\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n                        let list=[]\n                        list.push(data)\n\n                        this.props.updateUser(list)\n\n                    })\n\n                this.props.editModalToggle()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(`https://frozen-refuge-74833.herokuapp.com/users/me`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let user = response.data\n                this.setState({\n                    email: user.email,\n                    password: user.password\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.editModal}\n                        onClose={this.props.editModalToggle}\n                >\n                    <CModalHeader closeButton>News Detail</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n                            <CFormGroup>\n\n                                <CLabel htmlFor=\"email\">Email</CLabel>\n                                <CInput name=\"email\" id=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postcategory\">Password</CLabel>\n                                <CInput name=\"password\" id=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default EditModal\n","import {CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle} from \"@coreui/react\";\nimport React, {useState} from \"react\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport DetailModal from \"./modals/DetailModal\";\nimport EditModal from \"./modals/EditModal\";\n\nconst fields = [\n\n    'email',\n    'username',\n    'password',\n    'actions']\n\nconst UserTable = (props) => {\n\n    let userList = props.userList\n    const [modal, setModal] = useState(false);\n    const [detailModal, setDetailModal] = useState(false);\n    const [editModal, setEditModal] = useState(false);\n    const [selectedItem, setSelectedItem] = useState(false);\n    const [editItem, setEditItem] = useState(false);\n\n    const detailModalToggle = (id) => {\n        setSelectedItem(id)\n        setDetailModal(!detailModal);\n\n    }\n\n    const editModalToggle = (id) => {\n        setEditItem(id)\n        setEditModal(!editModal);\n\n    }\n\n    const toggle = (id) => {\n\n        setSelectedItem(id)\n        setModal(!modal);\n\n    }\n\n\n    return (\n        <React.Fragment>\n            {selectedItem ? <DetailModal\n                selectedItem={selectedItem}\n                detailModal={detailModal}\n                detailModalToggle={detailModalToggle}/> : null}\n\n            {editItem ? <EditModal\n                updateUser={props.updateUser}\n                editItem={editItem}\n                editModal={editModal}\n                editModalToggle={editModalToggle}/> : null}\n            <DeleteModal\n                showDeleteAlert={props.showDeleteAlert}\n                updateUser={props.updateUser}\n                selectedItem={selectedItem}\n                modal={modal}\n                toggle={toggle}/>\n\n            <CDataTable\n                items={userList}\n                fields={fields}\n                bordered\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                    'actions':\n                        (item) => (\n                            <td>\n\n                                <CDropdown className=\"m-1 btn-group\">\n                                    <CDropdownToggle color=\"primary\">\n                                        Actions\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n\n                                        <CDropdownItem\n                                            onClick={() => detailModalToggle(item._id)}>View</CDropdownItem>\n\n                                        <CDropdownItem\n                                            onClick={() => editModalToggle(item._id)}>Edit</CDropdownItem>\n\n                                        <CDropdownItem\n                                            key={item._id}\n                                            onClick={() => toggle(item._id)}>Delete</CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n\n\n                            </td>\n                        )\n\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default UserTable\n","import React from 'react'\nimport {CCard, CCardBody, CCol, CNav, CNavItem, CNavLink, CRow, CTabContent, CTabPane, CTabs,} from '@coreui/react'\nimport UserTable from \"./UserTable\";\nimport * as axios from \"axios\";\nimport SuccessAlert from \"../../ui/alerts/SuccessAlert\";\nimport DeleteAlert from \"../../ui/alerts/DeleteAlert\";\nimport Cookies from \"universal-cookie\";\n\nclass User extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userList: [],\n      deleteModal: false,\n      showSuccessAlert: false,\n      showDeleteAlert: false,\n      errorMessage:{\n        showErrorAlert: false,\n        message: ''\n      },\n      modal: {\n        addNavLink: false,\n        manageNavLink: true,\n        addTab: false,\n        manageTab: true\n      }\n\n\n    }\n\n\n  }\n\n  componentDidMount() {\n\n    const cookies = new Cookies();\n\n    axios.get('https://frozen-refuge-74833.herokuapp.com/users/me',\n        {\n          headers: {\n\n            Authorization: cookies.get('token')\n          }\n        }\n    )\n      .then(response => {\n\n        console.log(response.data)\n        const data = response.data\n        let list=[]\n        list.push(data)\n        this.setState({\n          userList:  list\n        })\n\n        console.log(\"o/p\" + this.state.userList)\n      })\n  }\n\n  updateUser = (userList) => {\n\n    this.setState({\n      userList: userList\n    })\n\n\n  }\n\n  showAlert = () => {\n    this.setState({\n      showSuccessAlert: true\n    })\n\n  }\n\n  showDeleteAlert = () => {\n    this.setState({\n      showSuccessAlert: false,\n      showDeleteAlert: true\n    })\n\n  }\n\n  showErrorAlert = (errorMessage) => {\n    this.setState({\n      errorMessage:{\n        showErrorAlert: true,\n        message: errorMessage\n      }\n    })\n\n  }\n\n  addTabController = () => {\n    this.setState({\n      modal: {\n        addNavLink: true,\n        addTab: true,\n        manageNavLink: false,\n        manageTab: false\n      }\n    })\n  }\n\n  manageTabController = () => {\n    this.setState({\n      modal: {\n        addNavLink: false,\n        addTab: false,\n        manageNavLink: true,\n        manageTab: true\n      }\n    })\n  }\n\n\n  render() {\n    return (\n\n      <React.Fragment>\n        {this.state.errorMessage.showErrorAlert === true ?\n          <DeleteAlert\n            message={this.state.errorMessage.showErrorAlert.errorMessage}/>\n          : null}\n\n        {this.state.showSuccessAlert === true ?\n          <SuccessAlert\n            message={\"User is added Successfully...\"}/>\n          : null}\n\n        {this.state.showDeleteAlert === true ?\n          <DeleteAlert\n            message={\"User is deleted...\"}/>\n          : null}\n\n        <CRow>\n          <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\n            <CCard>\n              <CCardBody>\n                <CTabs>\n                  <CNav variant=\"tabs\">\n                    <CNavItem onClick={this.manageTabController}>\n                      <CNavLink active={this.state.modal.manageNavLink}>\n                        Manage\n                      </CNavLink>\n                    </CNavItem>\n                  </CNav>\n\n                  <CTabContent>\n\n                    <CTabPane active={this.state.modal.addTab}>\n                    </CTabPane>\n\n                    <CTabPane active={this.state.modal.manageTab}>\n                      <UserTable\n                        showDeleteAlert={this.showDeleteAlert}\n                        updateUser={this.updateUser}\n                        deleteSupplier={this.deleteSupplier}\n                        userList={this.state.userList}/>\n                    </CTabPane>\n\n                  </CTabContent>\n                </CTabs>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      </React.Fragment>\n    )\n  }\n\n\n}\n\nexport default User\n"],"sourceRoot":""}