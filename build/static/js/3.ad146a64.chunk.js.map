{"version":3,"sources":["api/Api.js","ui/alerts/SuccessAlert.js","ui/alerts/DeleteAlert.js","views/news/NewsForm.js","views/news/modals/DeleteModal.js","views/news/modals/DetailModal.js","views/news/modals/EditModal.js","views/news/modals/UpdateImageModal.js","views/news/NewsTable.js","views/news/News.js"],"names":["BASE_URL","SuccessAlert","props","color","closeButton","message","DeleteAlert","NewsForm","handleInputChange","e","target","name","value","setState","imageUploader","preventDefault","console","log","files","selectedFile","handleFormSubmit","cookies","Cookies","formData","FormData","append","state","posttitle","postcategory","postdetails","postconclusion","axios","headers","Authorization","get","then","response","data","updateNews","newsList","manageTabController","showAlert","catch","error","this","showError","uploading","onSubmit","htmlFor","id","onChange","placeholder","required","type","size","React","Component","DeleteModal","handleDeleteBtn","toggle","showDeleteAlert","show","modal","onClose","onClick","selectedItem","DetailModal","modalCancelBtn","detailModalToggle","news","detailModal","xs","sm","disabled","src","images","style","width","height","EditModal","_id","editModalToggle","editItem","editModal","UpdateImageModal","imageItem","updateImageToggle","updateImageModal","alt","fields","NewsTable","useState","setModal","setDetailModal","setEditModal","setUpdateImageModal","setSelectedItem","setEditItem","setImageItem","Fragment","items","bordered","itemsPerPage","pagination","scopedSlots","item","deleteImage","FacebookShareButton","quote","url","FacebookIcon","logoFillColor","className","key","News","editProduct","deleteNews","deleteModal","showSuccessAlert","showErrorAlert","errorMessage","addTabController","addNavLink","addTab","manageNavLink","manageTab","md","variant","active","deleteSupplier"],"mappings":"iHAAA,kCAAQ,IAAMA,EAAS,4C,gCCAvB,2BAceC,IAXI,SAACC,GAElB,OACE,kBAAC,IAAD,CAAQC,MAAM,UACNC,aAAW,GAChBF,EAAMG,W,gCCRb,2BAeeC,IAZG,SAACJ,GAEjB,OACE,kBAAC,IAAD,CAAQC,MAAM,SACNC,aAAW,GAChBF,EAAMG,W,0ICsJEE,E,kDAtJX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IAcVM,kBAAoB,SAACC,GAAO,IAAD,EAEDA,EAAEC,OAAjBC,EAFgB,EAEhBA,KAAMC,EAFU,EAEVA,MACb,EAAKC,SAAL,eACKF,EAAOC,KAnBG,EAwBnBE,cAAgB,SAACL,GACbA,EAAEM,iBAEFC,QAAQC,IAAIR,EAAEC,OAAOQ,OAErB,EAAKL,SAAS,CACVM,aAAcV,EAAEC,OAAOQ,MAAM,MA9BlB,EAmCnBE,iBAAmB,SAACX,GAChBA,EAAEM,iBAEF,IAAMM,EAAU,IAAIC,IAEhBC,EAAW,IAAIC,SACnBD,EAASE,OAAO,SAAU,EAAKC,MAAMP,cACrCI,EAASE,OAAO,YAAa,EAAKC,MAAMC,WACxCJ,EAASE,OAAO,eAAgB,EAAKC,MAAME,cAC3CL,EAASE,OAAO,cAAe,EAAKC,MAAMG,aAC1CN,EAASE,OAAO,iBAAkB,EAAKC,MAAMI,gBAG7CC,OAAW/B,IAAS,UAChBuB,EACA,CACIS,QAAS,CACLC,cAAeZ,EAAQa,IAAI,YAGlCC,MAAK,SAAAC,GAEFL,MAAU/B,IAAS,eACdmC,MAAK,SAAAC,GAEFpB,QAAQC,IAAImB,EAASC,MACrB,IAAMA,EAAOD,EAASC,KAEtB,EAAKnC,MAAMoC,WAAWD,GAEtBrB,QAAQC,IAAI,MAAQ,EAAKS,MAAMa,aAGvC,EAAKrC,MAAMsC,sBAEX,EAAKtC,MAAMuC,eAGdC,OAAM,SAAUC,GACTA,EAAMP,UAENpB,QAAQC,IAAI0B,EAAMP,UAItBQ,KAAKC,UAAUF,EAAMP,cA7E7BpB,QAAQC,IAAIf,GAEZ,EAAKwB,MAAQ,CACTC,UAAW,GACXC,aAAc,GACdC,YAAa,GACbC,eAAgB,GAChBgB,WAAW,EACX3B,aAAc,MAXH,E,qDAuFf,OAGI,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAO4B,SAAUH,KAAKxB,kBAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ4B,QAAQ,aAAhB,eACA,kBAAC,IAAD,CAAQrC,KAAK,YAAYsC,GAAG,YACpBrC,MAAOgC,KAAKlB,MAAMC,UAClBuB,SAAUN,KAAKpC,kBACf2C,YAAY,oBACZC,SAAS,cAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQJ,QAAQ,gBAAhB,iBACA,kBAAC,IAAD,CAAQrC,KAAK,eAAesC,GAAG,eACvBrC,MAAOgC,KAAKlB,MAAME,aAClBsB,SAAUN,KAAKpC,kBACf2C,YAAY,sBACZC,SAAS,cAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQJ,QAAQ,eAAhB,gBACA,kBAAC,IAAD,CAAQC,GAAG,cAActC,KAAK,cACtBC,MAAOgC,KAAKlB,MAAMG,YAClBqB,SAAUN,KAAKpC,kBACf2C,YAAY,wBAGxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQH,QAAQ,kBAAhB,mBACA,kBAAC,KAAD,CAAWrC,KAAK,iBAAiBsC,GAAG,iBACzBrC,MAAOgC,KAAKlB,MAAMI,eAClBoB,SAAUN,KAAKpC,kBACf2C,YAAY,wBACZC,SAAS,cAGxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQJ,QAAQ,UAAhB,UACA,kBAAC,IAAD,CAAQK,KAAK,OAAO1C,KAAK,OAAOuC,SAAUN,KAAK9B,cACvCqC,YAAY,wBAGxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASE,KAAK,SAASC,KAAK,KAAKnD,MAAM,WAAU,kBAAC,IAAD,CAC7CQ,KAAK,iBADT,mB,GAzIL4C,IAAMC,W,QC6DdC,E,4MA5DXC,gBAAkB,SAACT,GAGf,IAAM5B,EAAU,IAAIC,IAEpBS,SAAa/B,IAAS,UAAD,OAAWiD,GAC5B,CACIjB,QAAS,CAELC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEFL,MAAU/B,IAAS,eACdmC,MAAK,SAAAC,GAEFpB,QAAQC,IAAImB,EAASC,MACrB,IAAMA,EAAOD,EAASC,KAEtB,EAAKnC,MAAMoC,WAAWD,MAG9B,EAAKnC,MAAMyD,SAEX,EAAKzD,MAAM0D,sB,uDAOb,IAAD,OAEL,OACI,oCACI,kBAAC,IAAD,CACIC,KAAMjB,KAAK1C,MAAM4D,MACjBC,QAASnB,KAAK1C,MAAMyD,QAEpB,kBAAC,IAAD,CAAcvD,aAAW,GAAzB,kBACA,kBAAC,IAAD,qCAGA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACID,MAAM,YACN6D,QAASpB,KAAK1C,MAAMyD,QAFxB,UAGkB,IAClB,kBAAC,IAAD,CAASK,QAAS,kBAAM,EAAKN,gBAAgB,EAAKxD,MAAM+D,eAC/C9D,MAAM,UADf,iB,GArDEoD,IAAMC,WCuHjBU,E,kDA1GX,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IA0BViE,eAAiB,WAEb,EAAKjE,MAAM+D,aAAa,KACxB,EAAK/D,MAAMkE,qBA3BX,EAAK1C,MAAQ,CACT2C,KAAM,IAJK,E,gEAQE,IAAD,OACVhD,EAAU,IAAIC,IAEpBS,MAAU/B,IAAS,UAAD,OAAW4C,KAAK1C,MAAM+D,cACpC,CACIjC,QAAS,CACLC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEF,EAAKvB,SAAS,CACVwD,KAAMjC,EAASC,Y,+BAc3B,OACI,oCACI,kBAAC,IAAD,CAAQiB,KAAM,KACNO,KAAMjB,KAAK1C,MAAMoE,YACjBP,QAASnB,KAAK1C,MAAMkE,mBAExB,kBAAC,IAAD,CAAchE,aAAW,GAAzB,eACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAMmE,GAAG,KAAKC,GAAG,KACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQxB,QAAQ,aAAhB,eACA,kBAAC,IAAD,CAAQrC,KAAK,YACLC,MAAOgC,KAAKlB,MAAM2C,KAAK1C,UAAW8C,SAAS,cAEvD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQzB,QAAQ,mBAAhB,iBACA,kBAAC,IAAD,CAAQrC,KAAK,eACLC,MAAOgC,KAAKlB,MAAM2C,KAAKzC,aAAc6C,SAAS,cAG1D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQzB,QAAQ,eAAhB,gBACA,kBAAC,IAAD,CAAQrC,KAAK,cAAcC,MAAOgC,KAAKlB,MAAM2C,KAAKxC,YAC1C4C,SAAS,cAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQzB,QAAQ,kBAAhB,mBACA,kBAAC,IAAD,CAAQrC,KAAK,iBACLC,MAAOgC,KAAKlB,MAAM2C,KAAKvC,eAAgB2C,SAAS,iBASxE,kBAAC,IAAD,CAAMF,GAAG,KAAKC,GAAG,KACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KAEI,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQxB,QAAQ,mBAAhB,SAAgD,6BAC5C,kBAAC,IAAD,CACI0B,IAAK,uDAAuD9B,KAAKlB,MAAM2C,KAAKM,OAC5EC,MAAO,CAACC,MAAO,IAAIC,OAAO,mB,GAxFhDvB,IAAMC,WC0JjBuB,E,kDApKX,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IAYVM,kBAAoB,SAACC,GAAO,IAAD,EAEDA,EAAEC,OAAjBC,EAFgB,EAEhBA,KAAMC,EAFU,EAEVA,MACb,EAAKC,SAAL,eACKF,EAAOC,KAjBG,EAsBnBQ,iBAAmB,SAACX,GAChBA,EAAEM,iBAEF,IAAMM,EAAU,IAAIC,IAGhB+C,EAAO,CACP1C,UAAW,EAAKD,MAAMC,UACtBC,aAAc,EAAKF,MAAME,aACzBC,YAAa,EAAKH,MAAMG,YACxBC,eAAgB,EAAKJ,MAAMI,gBAG/BC,MAAU/B,IAAS,UAAD,OAAW,EAAK0B,MAAMsD,KAAOX,EAC3C,CACIrC,QAAS,CACLC,cAAeZ,EAAQa,IAAI,YAGlCC,MAAK,SAAAC,GAEFL,MAAU,mDACN,CACIC,QAAS,CAELC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEFpB,QAAQC,IAAImB,EAASC,MACrB,IAAMA,EAAOD,EAASC,KAEtB,EAAKnC,MAAMoC,WAAWD,GAEtBrB,QAAQC,IAAI,MAAQ,EAAKS,MAAMa,aAGvC,EAAKrC,MAAM+E,qBAGdvC,OAAM,SAAUC,GACTA,EAAMP,UAENpB,QAAQC,IAAI0B,EAAMP,UAItBQ,KAAKC,UAAUF,EAAMP,cApE7B,EAAKV,MAAQ,CACT2C,KAAM,GACNW,IAAK,EAAK9E,MAAMgF,SAChBvD,UAAW,GACXC,aAAc,GACdC,YAAa,GACbC,eAAgB,IATL,E,gEA4EE,IAAD,OACVT,EAAU,IAAIC,IAEpBS,MAAA,0DAA6Da,KAAK1C,MAAMgF,UACpE,CACIlD,QAAS,CACLC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEF,IAAIiC,EAAOjC,EAASC,KACpB,EAAKxB,SAAS,CACVc,UAAW0C,EAAK1C,UAChBC,aAAcyC,EAAKzC,aACnBC,YAAawC,EAAKxC,YAClBC,eAAgBuC,EAAKvC,sB,+BASjC,OACI,oCACI,kBAAC,IAAD,CAAQwB,KAAM,KACNO,KAAMjB,KAAK1C,MAAMiF,UACjBpB,QAASnB,KAAK1C,MAAM+E,iBAExB,kBAAC,IAAD,CAAc7E,aAAW,GAAzB,eACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAO2C,SAAUH,KAAKxB,kBAClB,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAQ4B,QAAQ,aAAhB,eACA,kBAAC,IAAD,CAAQrC,KAAK,YAAYsC,GAAG,YACpBrC,MAAOgC,KAAKlB,MAAMC,UAClBuB,SAAUN,KAAKpC,kBACf2C,YAAY,oBACZC,SAAS,cAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQJ,QAAQ,gBAAhB,iBACA,kBAAC,IAAD,CAAQrC,KAAK,eAAesC,GAAG,eACvBrC,MAAOgC,KAAKlB,MAAME,aAClBsB,SAAUN,KAAKpC,kBACf2C,YAAY,sBACZC,SAAS,cAGrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQJ,QAAQ,eAAhB,gBACA,kBAAC,IAAD,CAAQC,GAAG,cAActC,KAAK,cACtBC,MAAOgC,KAAKlB,MAAMG,YAClBqB,SAAUN,KAAKpC,kBACf2C,YAAY,wBAGxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQH,QAAQ,kBAAhB,mBACA,kBAAC,KAAD,CAAWrC,KAAK,iBAAiBsC,GAAG,iBACzBrC,MAAOgC,KAAKlB,MAAMI,eAClBoB,SAAUN,KAAKpC,kBACf2C,YAAY,wBACZC,SAAS,cAGxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASC,KAAK,SAASC,KAAK,KAAKnD,MAAM,WAAU,kBAAC,IAAD,CAC7CQ,KAAK,iBADT,WAEA,kBAAC,IAAD,CAAS0C,KAAK,QAAQC,KAAK,KAAKnD,MAAM,UAAS,kBAAC,IAAD,CAAOQ,KAAK,YAA3D,mB,GAxJR4C,IAAMC,W,gBCyHf4B,E,kDAxHX,WAAYlF,GAAQ,IAAD,8BACf,cAAMA,IAQVY,cAAgB,SAACL,GACbA,EAAEM,iBAEFC,QAAQC,IAAIR,EAAEC,OAAOQ,OAErB,EAAKL,SAAS,CACVM,aAAcV,EAAEC,OAAOQ,MAAM,MAflB,EAoBnBE,iBAAmB,SAACX,GAChBA,EAAEM,iBAEF,IAAMM,EAAU,IAAIC,IAEpBS,OAAW/B,IAAS,sBAAD,OAAuB,EAAKE,MAAMmF,WAAa,EAAK3D,MAAMP,aACzE,CACIa,QAAS,CACLC,cAAeZ,EAAQa,IAAI,YAGlCC,MAAK,SAAAC,GAEFL,MAAU/B,IAAS,eACdmC,MAAK,SAAAC,GAEFpB,QAAQC,IAAImB,EAASC,MACrB,IAAMA,EAAOD,EAASC,KAEtB,EAAKnC,MAAMoC,WAAWD,GAEtBrB,QAAQC,IAAI,MAAQ,EAAKS,MAAMa,aAGvC,EAAKrC,MAAMoF,uBAGd5C,OAAM,SAAUC,GACTA,EAAMP,UAENpB,QAAQC,IAAI0B,EAAMP,UAItBQ,KAAKC,UAAUF,EAAMP,cAnD7B,EAAKV,MAAQ,CACTsD,IAAK,EAAK9E,MAAMmF,WAJL,E,gEA2DE,IAAD,OACVhE,EAAU,IAAIC,IAEpBS,MAAU/B,IAAS,UAAD,OAAW4C,KAAK1C,MAAMmF,WACpC,CACIrD,QAAS,CACLC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEF,IAAIiC,EAAOjC,EAASC,KACpB,EAAKxB,SAAS,CACV8D,OAAQN,EAAKM,c,+BAUzB,OACI,oCACI,kBAAC,IAAD,CAAQrB,KAAM,KACNO,KAAMjB,KAAK1C,MAAMqF,iBACjBxB,QAASnB,KAAK1C,MAAMoF,mBAExB,kBAAC,IAAD,CAAclF,aAAW,GAAzB,gBACA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAO2C,SAAUH,KAAKxB,kBAElB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ4B,QAAQ,UAAhB,UAEA,kBAAC,IAAD,CAAM0B,IAAK1E,IAAS,cAAgB4C,KAAKlB,MAAMiD,OACvCa,IAAI,QACJZ,MAAO,CAACC,MAAO,IAAKC,OAAQ,OACpC,kBAAC,IAAD,CAAQzB,KAAK,OAAO1C,KAAK,QAAQuC,SAAUN,KAAK9B,cACxCqC,YAAY,wBAGxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAASE,KAAK,SAASC,KAAK,KAAKnD,MAAM,WAAU,kBAAC,IAAD,CAC7CQ,KAAK,iBADT,WAEA,kBAAC,IAAD,CAAS0C,KAAK,QAAQC,KAAK,KAAKnD,MAAM,UAAS,kBAAC,IAAD,CAAOQ,KAAK,YAA3D,mB,GA5GD4C,IAAMC,WCqC/BiC,EAAS,CAEX,YACA,eACA,cACA,iBACA,SACA,QACA,WAqIWC,EAnIG,SAACxF,GAEf,IAAIqC,EAAWrC,EAAMqC,SAFI,EAGCoD,oBAAS,GAHV,mBAGlB7B,EAHkB,KAGX8B,EAHW,OAIaD,oBAAS,GAJtB,mBAIlBrB,EAJkB,KAILuB,EAJK,OAKSF,oBAAS,GALlB,mBAKlBR,EALkB,KAKPW,EALO,OAMuBH,oBAAS,GANhC,mBAMlBJ,EANkB,KAMAQ,EANA,OAQeJ,oBAAS,GARxB,mBAQlB1B,EARkB,KAQJ+B,EARI,OASOL,oBAAS,GAThB,mBASlBT,EATkB,KASRe,EATQ,OAUSN,oBAAS,GAVlB,mBAUlBN,EAVkB,KAUPa,EAVO,KAYnB9B,EAAoB,SAACnB,GACvB+C,EAAgB/C,GAChB4C,GAAgBvB,IAGdgB,EAAoB,SAACrC,GACvBiD,EAAajD,GACb8C,GAAqBR,IAInBN,EAAkB,SAAChC,GACrBgD,EAAYhD,GACZ6C,GAAcX,IAIZxB,EAAS,SAACV,GAEZ+C,EAAgB/C,GAChB2C,GAAU9B,IAKd,OACI,kBAAC,IAAMqC,SAAP,KACKlC,EAAe,kBAAC,EAAD,CACZA,aAAcA,EACdK,YAAaA,EACbF,kBAAmBA,IAAuB,KAE7CiB,EAAY,kBAAC,EAAD,CACT/C,WAAYpC,EAAMoC,WAClB+C,UAAWA,EACXE,iBAAkBA,EAClBD,kBAAmBA,IAAuB,KAE7CJ,EAAW,kBAAC,EAAD,CACR5C,WAAYpC,EAAMoC,WAClB4C,SAAUA,EACVC,UAAWA,EACXF,gBAAiBA,IAAqB,KAC1C,kBAAC,EAAD,CACIrB,gBAAiB1D,EAAM0D,gBACvBtB,WAAYpC,EAAMoC,WAClB2B,aAAcA,EACdH,MAAOA,EACPH,OAAQA,IAEZ,kBAAC,IAAD,CACIyC,MAAO7D,EACPkD,OAAQA,EACRY,UAAQ,EACRC,aAAc,GACdC,YAAU,EACVC,YAAa,CACT,OACI,SAACC,GAAD,OAEI,4BACqB,OAAhBA,EAAK9B,OACF,kBAAC,IAAD,CAAMD,IAAK,uDAAyD+B,EAAK9B,OACnEa,IAAI,QAAQZ,MAAO,CAACC,MAAO,IAAKC,OAAQ,OAC9C,kBAAC,IAAD,CAAMJ,IAAK,GACLc,IAAI,QAAQZ,MAAO,CAACC,MAAO,IAAKC,OAAQ,OAEjC,OAAhB2B,EAAK9B,OACF,4BAAQX,QAAS,kBA5HjC,SAACf,EAAI/C,GAErB,IAAMmB,EAAU,IAAIC,IAEpBN,QAAQC,IAAII,EAAQa,IAAI,UAExBH,MAAA,sEAAyEkB,GAAM,KAC3E,CACIjB,QAAS,CAELC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEFL,MAAU,mDACN,CACIC,QAAS,CAELC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEF,IAAMC,EAAOD,EAASC,KACtBnC,EAAMoC,WAAWD,SAiGsBqE,CAAYD,EAAKzB,IAAK9E,KAA7C,gBAA6E,OAG7F,MACI,SAACuG,GAAD,OAEI,4BACI,kBAACE,EAAA,EAAD,CACIC,MAAOH,EAAK9E,UACZkF,IAAG,oEAA+DJ,EAAKzB,MAGvE,kBAAC8B,EAAA,EAAD,CAAcC,cAAc,aAI5C,QACI,SAACN,GAAD,OACI,4BAEI,kBAAC,IAAD,CAAWO,UAAU,iBACjB,kBAAC,IAAD,CAAiB7G,MAAM,WAAvB,WAGA,kBAAC,IAAD,KAEI,kBAAC,IAAD,CACI6D,QAAS,kBAAMI,EAAkBqC,EAAKzB,OAD1C,QAGA,kBAAC,IAAD,CACIhB,QAAS,kBAAMsB,EAAkBmB,EAAKzB,OAD1C,gBAGA,kBAAC,IAAD,CACIhB,QAAS,kBAAMiB,EAAgBwB,EAAKzB,OADxC,QAGA,kBAAC,IAAD,CACIiC,IAAKR,EAAKzB,IACVhB,QAAS,kBAAML,EAAO8C,EAAKzB,OAF/B,mB,gBC9JlCkC,E,kDAEF,WAAYhH,GAAQ,IAAD,8BACf,cAAMA,IAwBVoC,WAAa,SAACC,GAEV,EAAK1B,SAAS,CACV0B,SAAUA,KA5BC,EAkCnB4E,YAAc,aAlCK,EAqCnBC,WAAa,SAACnE,GAQV,OANA,EAAKpC,SAAS,CACNwG,aAAa,IAOjB,kBAAC,EAAD,CAAaA,YAAa,EAAKnH,MAAMmH,eA/C1B,EAmDnB5E,UAAY,WACR,EAAK5B,SAAS,CACVyG,kBAAkB,KArDP,EA0DnB1D,gBAAkB,WACd,EAAK/C,SAAS,CACVyG,kBAAkB,EAClB1D,iBAAiB,KA7DN,EAkEnB2D,eAAiB,SAACC,GACd,EAAK3G,SAAS,CACV2G,aAAc,CACVD,gBAAgB,EAChBlH,QAASmH,MAtEF,EA4EnBC,iBAAmB,WACf,EAAK5G,SAAS,CACViD,MAAO,CACH4D,YAAY,EACZC,QAAQ,EACRC,eAAe,EACfC,WAAW,MAlFJ,EAuFnBrF,oBAAsB,WAElB,IAAMnB,EAAU,IAAIC,IAEpBS,MAAU/B,IAAS,UACf,CACIgC,QAAS,CAELC,cAAeZ,EAAQa,IAAI,YAIlCC,MAAK,SAAAC,GAEFpB,QAAQC,IAAImB,EAASC,MACrB,IAAMA,EAAOD,EAASC,KAEtB,EAAKxB,SAAS,CACV0B,SAAUF,EACVyB,MAAO,CACH4D,YAAY,EACZC,QAAQ,EACRC,eAAe,EACfC,WAAW,SA3G3B,EAAKnG,MAAQ,CACTa,SAAU,GACV8E,aAAa,EACbC,kBAAkB,EAClB1D,iBAAiB,EACjB4D,aAAc,CACVD,gBAAgB,EAChBlH,QAAS,IAEbyD,MAAO,CACH4D,YAAY,EACZE,eAAe,EACfD,QAAQ,EACRE,WAAW,IAhBJ,E,qDAuHf,OAEI,kBAAC,IAAM1B,SAAP,MACgD,IAA3CvD,KAAKlB,MAAM8F,aAAaD,eACrB,kBAACjH,EAAA,EAAD,CACID,QAASuC,KAAKlB,MAAM8F,aAAaD,eAAeC,eAClD,MAE2B,IAAhC5E,KAAKlB,MAAM4F,iBACR,kBAACrH,EAAA,EAAD,CACII,QAAS,kCACX,MAE0B,IAA/BuC,KAAKlB,MAAMkC,gBACR,kBAACtD,EAAA,EAAD,CACID,QAAS,uBACX,KAEN,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMkE,GAAG,KAAKuD,GAAG,KAAKd,UAAU,QAC5B,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,KAAD,KACI,kBAAC,IAAD,CAAMe,QAAQ,QACV,kBAAC,IAAD,CAAU/D,QAASpB,KAAK6E,kBACpB,kBAAC,IAAD,CAAUO,OAAQpF,KAAKlB,MAAMoC,MAAM4D,YAAnC,aAIJ,kBAAC,IAAD,CAAU1D,QAASpB,KAAKJ,qBACpB,kBAAC,IAAD,CAAUwF,OAAQpF,KAAKlB,MAAMoC,MAAM8D,eAAnC,YAMR,kBAAC,KAAD,KAEI,kBAAC,KAAD,CAAUI,OAAQpF,KAAKlB,MAAMoC,MAAM6D,QAC/B,kBAAC,EAAD,CACIJ,eAAgB3E,KAAK2E,eACrB9E,UAAWG,KAAKH,UAChBD,oBAAqBI,KAAKJ,oBAC1BF,WAAYM,KAAKN,cAGzB,kBAAC,KAAD,CAAU0F,OAAQpF,KAAKlB,MAAMoC,MAAM+D,WAC/B,kBAAC,EAAD,CACIjE,gBAAiBhB,KAAKgB,gBACtBtB,WAAYM,KAAKN,WACjB2F,eAAgBrF,KAAKqF,eACrBd,YAAavE,KAAKuE,YAClB5E,SAAUK,KAAKlB,MAAMa,uB,GA7KlDgB,IAAMC,WA8LV0D","file":"static/js/3.ad146a64.chunk.js","sourcesContent":["export  const BASE_URL=\"https://frozen-atoll-28362.herokuapp.com\"","import React from \"react\"\nimport {CAlert} from \"@coreui/react\";\n\nconst SuccessAlert=(props)=>{\n\n  return(\n    <CAlert color=\"success\"\n            closeButton>\n      {props.message}\n    </CAlert>\n  )\n\n}\n\nexport default SuccessAlert\n","import React from \"react\"\nimport {CAlert} from \"@coreui/react\";\n\nconst DeleteAlert=(props)=>{\n\n  return(\n    <CAlert color=\"danger\"\n            closeButton>\n      {props.message}\n    </CAlert>\n\n  )\n\n}\n\nexport default DeleteAlert\n","import React from 'react'\nimport {CButton, CCard, CCardBody, CForm, CFormGroup, CInput, CLabel, CTextarea,} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport CIcon from \"@coreui/icons-react\";\nimport Cookies from \"universal-cookie\";\nimport {BASE_URL} from \"../../api/Api\";\n\nclass NewsForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(props)\n\n        this.state = {\n            posttitle: \"\",\n            postcategory: \"\",\n            postdetails: \"\",\n            postconclusion: \"\",\n            uploading: false,\n            selectedFile: null,\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    imageUploader = (e) => {\n        e.preventDefault()\n\n        console.log(e.target.files)\n\n        this.setState({\n            selectedFile: e.target.files[0],\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        let formData = new FormData()\n        formData.append('images', this.state.selectedFile)\n        formData.append('posttitle', this.state.posttitle);\n        formData.append('postcategory', this.state.postcategory);\n        formData.append('postdetails', this.state.postdetails);\n        formData.append('postconclusion', this.state.postconclusion)\n\n\n        axios.post(BASE_URL+'/posts/',\n            formData,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                }\n            })\n            .then(response => {\n\n                axios.get(BASE_URL+'/usersnews/')\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n\n                        console.log(\"o/p\" + this.state.newsList)\n                    })\n\n                this.props.manageTabController()\n\n                this.props.showAlert()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n\n    render() {\n        return (\n\n\n            <CCard>\n                <CCardBody>\n\n                    <CForm onSubmit={this.handleFormSubmit}>\n                        <CFormGroup>\n                            <CLabel htmlFor=\"posttitle\">Post tittle</CLabel>\n                            <CInput name=\"posttitle\" id=\"posttitle\"\n                                    value={this.state.posttitle}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Post Tittle\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"postcategory\">Post Category</CLabel>\n                            <CInput name=\"postcategory\" id=\"postcategory\"\n                                    value={this.state.postcategory}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Post Category\"\n                                    required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"postdetails\">Post Details</CLabel>\n                            <CInput id=\"postdetails\" name=\"postdetails\"\n                                    value={this.state.postdetails}\n                                    onChange={this.handleInputChange}\n                                    placeholder=\"Enter Post Details\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"postconclusion\">Post Conclusion</CLabel>\n                            <CTextarea name=\"postconclusion\" id=\"postconclusion\"\n                                       value={this.state.postconclusion}\n                                       onChange={this.handleInputChange}\n                                       placeholder=\"Enter Post Conclusion\"\n                                       required=\"required\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CLabel htmlFor=\"images\">Images</CLabel>\n                            <CInput type=\"file\" name=\"file\" onChange={this.imageUploader}\n                                    placeholder=\"Enter Post Details\"/>\n                        </CFormGroup>\n\n                        <CFormGroup>\n                            <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                name=\"cil-scrubber\"/> Submit</CButton>\n                        </CFormGroup>\n\n                    </CForm>\n                </CCardBody>\n\n            </CCard>\n\n\n        )\n    }\n}\n\nexport default NewsForm\n","import React from 'react'\nimport {CButton, CModal, CModalBody, CModalFooter, CModalHeader} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport {BASE_URL} from \"../../../api/Api\";\n\nclass DeleteModal extends React.Component {\n\n    handleDeleteBtn = (id) => {\n\n\n        const cookies = new Cookies();\n\n        axios.delete(BASE_URL+`/posts/${id}`,\n            {\n                headers: {\n\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                axios.get(BASE_URL+'/usersnews/')\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n                    })\n\n                this.props.toggle()\n\n                this.props.showDeleteAlert()\n\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal\n                    show={this.props.modal}\n                    onClose={this.props.toggle}\n                >\n                    <CModalHeader closeButton>Delete Product</CModalHeader>\n                    <CModalBody>\n                        Are you sure want to delete?\n                    </CModalBody>\n                    <CModalFooter>\n\n                        <CButton\n                            color=\"secondary\"\n                            onClick={this.props.toggle}\n                        >Cancel</CButton>{' '}\n                        <CButton onClick={() => this.handleDeleteBtn(this.props.selectedItem)}\n                                 color=\"danger\">Delete</CButton>\n                    </CModalFooter>\n                </CModal>\n            </>\n        )\n    }\n}\n\nexport default DeleteModal\n","import React from 'react'\nimport {\n    CCard,\n    CCardBody,\n    CCol,\n    CFormGroup,\n    CImg,\n    CInput,\n    CLabel,\n    CModal,\n    CModalBody,\n    CModalHeader,\n    CRow\n} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport {BASE_URL} from \"../../../api/Api\";\n\nclass DetailModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            news: {}\n        }\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(BASE_URL+`/posts/${this.props.selectedItem}`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                this.setState({\n                    news: response.data\n                })\n\n            })\n    }\n\n    modalCancelBtn = () => {\n\n        this.props.selectedItem=null\n        this.props.detailModalToggle()\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.detailModal}\n                        onClose={this.props.detailModalToggle}\n                >\n                    <CModalHeader closeButton>News Detail</CModalHeader>\n                    <CModalBody>\n\n                        <CRow>\n\n                            <CCol xs=\"12\" sm=\"6\">\n                                <CCard>\n                                    <CCardBody>\n\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"posttitle\">Post Tittle</CLabel>\n                                            <CInput name=\"posttitle\"\n                                                    value={this.state.news.posttitle} disabled=\"disabled\"/>\n                                        </CFormGroup>\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"productCategory\">Post Category</CLabel>\n                                            <CInput name=\"postcategory\"\n                                                    value={this.state.news.postcategory} disabled=\"disabled\"/>\n                                        </CFormGroup>\n\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"postdetails\">Post Details</CLabel>\n                                            <CInput name=\"postdetails\" value={this.state.news.postdetails}\n                                                    disabled=\"disabled\"/>\n                                        </CFormGroup>\n\n                                        <CFormGroup>\n                                            <CLabel htmlFor=\"postconclusion\">Post Conclusion</CLabel>\n                                            <CInput name=\"postconclusion\"\n                                                    value={this.state.news.postconclusion} disabled=\"disabled\"/>\n                                        </CFormGroup>\n\n\n                                    </CCardBody>\n\n                                </CCard>\n                            </CCol>\n\n                            <CCol xs=\"12\" sm=\"6\">\n                                <CCard>\n                                    <CCardBody>\n\n                                        <CFormGroup>\n                                        <CLabel htmlFor=\"productCategory\">Image</CLabel><br></br>\n                                            <CImg\n                                                src={\"https://frozen-refuge-74833.herokuapp.com/PostImage/\"+this.state.news.images}\n                                                style={{width: 500,height:400}}\n                                            />\n                                        </CFormGroup>\n\n                                    </CCardBody>\n\n                                </CCard>\n                            </CCol>\n\n                        </CRow>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default DetailModal\n","import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CModalHeader, CTextarea} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\nimport {BASE_URL} from \"../../../api/Api\";\n\nclass EditModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            news: {},\n            _id: this.props.editItem,\n            posttitle: \"\",\n            postcategory: \"\",\n            postdetails: \"\",\n            postconclusion: \"\"\n        }\n    }\n\n    handleInputChange = (e) => {\n\n        const {name, value} = e.target\n        this.setState({\n            [name]: value\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n\n        let news = {\n            posttitle: this.state.posttitle,\n            postcategory: this.state.postcategory,\n            postdetails: this.state.postdetails,\n            postconclusion: this.state.postconclusion,\n        }\n\n        axios.put(BASE_URL+`/posts/${this.state._id}`, news,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                },\n            })\n            .then(response => {\n\n                axios.get('https://frozen-refuge-74833.herokuapp.com/posts/',\n                    {\n                        headers: {\n\n                            Authorization: cookies.get('token')\n                        }\n                    }\n                )\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n\n                        console.log(\"o/p\" + this.state.newsList)\n                    })\n\n                this.props.editModalToggle()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(`https://frozen-refuge-74833.herokuapp.com/posts/${this.props.editItem}`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let news = response.data\n                this.setState({\n                    posttitle: news.posttitle,\n                    postcategory: news.postcategory,\n                    postdetails: news.postdetails,\n                    postconclusion: news.postconclusion,\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.editModal}\n                        onClose={this.props.editModalToggle}\n                >\n                    <CModalHeader closeButton>News Detail</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n                            <CFormGroup>\n\n                                <CLabel htmlFor=\"posttitle\">Post tittle</CLabel>\n                                <CInput name=\"posttitle\" id=\"posttitle\"\n                                        value={this.state.posttitle}\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"Enter Post Tittle\"\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postcategory\">Post Category</CLabel>\n                                <CInput name=\"postcategory\" id=\"postcategory\"\n                                        value={this.state.postcategory}\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"Enter Post Category\"\n                                        required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postdetails\">Post Details</CLabel>\n                                <CInput id=\"postdetails\" name=\"postdetails\"\n                                        value={this.state.postdetails}\n                                        onChange={this.handleInputChange}\n                                        placeholder=\"Enter Post Details\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"postconclusion\">Post Conclusion</CLabel>\n                                <CTextarea name=\"postconclusion\" id=\"postconclusion\"\n                                           value={this.state.postconclusion}\n                                           onChange={this.handleInputChange}\n                                           placeholder=\"Enter Post Conclusion\"\n                                           required=\"required\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                                <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\"/> Reset</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default EditModal\n","import React from 'react'\nimport {CButton, CForm, CFormGroup, CInput, CLabel, CModal, CModalBody, CImg, CModalHeader} from \"@coreui/react\";\nimport * as axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport CIcon from \"@coreui/icons-react\";\nimport {BASE_URL} from \"../../../api/Api\";\n\nclass UpdateImageModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            _id: this.props.imageItem,\n\n        }\n    }\n\n    imageUploader = (e) => {\n        e.preventDefault()\n\n        console.log(e.target.files)\n\n        this.setState({\n            selectedFile: e.target.files[0],\n        })\n\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault()\n\n        const cookies = new Cookies();\n\n        axios.post(BASE_URL+`/posts/updateImage/${this.props.imageItem}`, this.state.selectedFile,\n            {\n                headers: {\n                    Authorization: cookies.get('token'),\n                }\n            })\n            .then(response => {\n\n                axios.get(BASE_URL+'/usersnews/')\n                    .then(response => {\n\n                        console.log(response.data)\n                        const data = response.data\n\n                        this.props.updateNews(data)\n\n                        console.log(\"o/p\" + this.state.newsList)\n                    })\n\n                this.props.updateImageToggle()\n\n            })\n            .catch(function (error) {\n                if (error.response) {\n                    // Request made and server responded\n                    console.log(error.response);\n                }\n\n                // throw new Error('Sorry Internal Server Error')\n                this.showError(error.response)\n            })\n\n    }\n\n    componentDidMount() {\n        const cookies = new Cookies();\n\n        axios.get(BASE_URL+`/posts/${this.props.imageItem}`,\n            {\n                headers: {\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                let news = response.data\n                this.setState({\n                    images: news.images,\n\n                })\n\n            })\n\n    }\n\n    render() {\n\n        return (\n            <>\n                <CModal size={'xl'}\n                        show={this.props.updateImageModal}\n                        onClose={this.props.updateImageToggle}\n                >\n                    <CModalHeader closeButton>Update Image</CModalHeader>\n                    <CModalBody>\n\n                        <CForm onSubmit={this.handleFormSubmit}>\n\n                            <CFormGroup>\n                                <CLabel htmlFor=\"images\">Images</CLabel>\n\n                                <CImg src={BASE_URL+\"/PostImage/\" + this.state.images}\n                                        alt=\"image\"\n                                        style={{width: 500, height: 400}}/>\n                                <CInput type=\"file\" name=\"files\" onChange={this.imageUploader}\n                                        placeholder=\"Enter Post Details\"/>\n                            </CFormGroup>\n\n                            <CFormGroup>\n                                <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon\n                                    name=\"cil-scrubber\"/> Submit</CButton>\n                                <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\"/> Reset</CButton>\n                            </CFormGroup>\n\n                        </CForm>\n\n                    </CModalBody>\n                </CModal>\n            </>\n        )\n    }\n\n}\n\nexport default UpdateImageModal\n","import {CDataTable, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CImg} from \"@coreui/react\";\nimport React, {useState} from \"react\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport DetailModal from \"./modals/DetailModal\";\nimport EditModal from \"./modals/EditModal\";\nimport {FacebookIcon, FacebookShareButton} from \"react-share\"\nimport Cookies from \"universal-cookie\";\nimport * as axios from \"axios\";\nimport UpdateImageModal from \"./modals/UpdateImageModal\";\n\nconst deleteImage = (id, props) => {\n\n    const cookies = new Cookies();\n\n    console.log(cookies.get('token'))\n\n    axios.put(`https://frozen-refuge-74833.herokuapp.com/posts/deleteImage/${id}`, null,\n        {\n            headers: {\n\n                Authorization: cookies.get('token')\n            }\n        }\n    )\n        .then(response => {\n\n            axios.get('https://frozen-refuge-74833.herokuapp.com/posts/',\n                {\n                    headers: {\n\n                        Authorization: cookies.get('token')\n                    }\n                }\n            )\n                .then(response => {\n\n                    const data = response.data\n                    props.updateNews(data)\n\n                })\n        })\n\n}\n\nconst fields = [\n\n    'posttitle',\n    'postcategory',\n    'postdetails',\n    'postconclusion',\n    'images',\n    'share',\n    'actions']\n\nconst NewsTable = (props) => {\n\n    let newsList = props.newsList\n    const [modal, setModal] = useState(false);\n    const [detailModal, setDetailModal] = useState(false);\n    const [editModal, setEditModal] = useState(false);\n    const [updateImageModal, setUpdateImageModal] = useState(false);\n\n    const [selectedItem, setSelectedItem] = useState(false);\n    const [editItem, setEditItem] = useState(false);\n    const [imageItem, setImageItem] = useState(false);\n\n    const detailModalToggle = (id) => {\n        setSelectedItem(id)\n        setDetailModal(!detailModal);\n\n    }\n    const updateImageToggle = (id) => {\n        setImageItem(id)\n        setUpdateImageModal(!updateImageModal);\n\n    }\n\n    const editModalToggle = (id) => {\n        setEditItem(id)\n        setEditModal(!editModal);\n\n    }\n\n    const toggle = (id) => {\n\n        setSelectedItem(id)\n        setModal(!modal);\n\n    }\n\n\n    return (\n        <React.Fragment>\n            {selectedItem ? <DetailModal\n                selectedItem={selectedItem}\n                detailModal={detailModal}\n                detailModalToggle={detailModalToggle}/> : null}\n\n            {imageItem ? <UpdateImageModal\n                updateNews={props.updateNews}\n                imageItem={imageItem}\n                updateImageModal={updateImageModal}\n                updateImageToggle={updateImageToggle}/> : null}\n\n            {editItem ? <EditModal\n                updateNews={props.updateNews}\n                editItem={editItem}\n                editModal={editModal}\n                editModalToggle={editModalToggle}/> : null}\n            <DeleteModal\n                showDeleteAlert={props.showDeleteAlert}\n                updateNews={props.updateNews}\n                selectedItem={selectedItem}\n                modal={modal}\n                toggle={toggle}/>\n\n            <CDataTable\n                items={newsList}\n                fields={fields}\n                bordered\n                itemsPerPage={10}\n                pagination\n                scopedSlots={{\n                    'images':\n                        (item) => (\n\n                            <td>\n                                {item.images !== null ?\n                                    <CImg src={\"https://frozen-refuge-74833.herokuapp.com/PostImage/\" + item.images}\n                                          alt=\"image\" style={{width: 500, height: 400}}/> :\n                                    <CImg src={\"\"}\n                                          alt=\"image\" style={{width: 500, height: 400}}/>}\n\n                                {item.images !== null ?\n                                    <button onClick={() => deleteImage(item._id, props)}>Delete Image</button> : null}\n                            </td>\n                        ),\n                    'share':\n                        (item) => (\n\n                            <td>\n                                <FacebookShareButton\n                                    quote={item.posttitle}\n                                    url={`https://festive-jepsen-4d10b9.netlify.app/#/feeds/details/${item._id}`}\n\n                                >\n                                    <FacebookIcon logoFillColor=\"white\"/>\n                                </FacebookShareButton>\n                            </td>\n                        ),\n                    'actions':\n                        (item) => (\n                            <td>\n\n                                <CDropdown className=\"m-1 btn-group\">\n                                    <CDropdownToggle color=\"primary\">\n                                        Actions\n                                    </CDropdownToggle>\n                                    <CDropdownMenu>\n\n                                        <CDropdownItem\n                                            onClick={() => detailModalToggle(item._id)}>View</CDropdownItem>\n\n                                        <CDropdownItem\n                                            onClick={() => updateImageToggle(item._id)}>Update Image</CDropdownItem>\n\n                                        <CDropdownItem\n                                            onClick={() => editModalToggle(item._id)}>Edit</CDropdownItem>\n\n                                        <CDropdownItem\n                                            key={item._id}\n                                            onClick={() => toggle(item._id)}>Delete</CDropdownItem>\n                                    </CDropdownMenu>\n                                </CDropdown>\n\n\n                            </td>\n                        )\n\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default NewsTable\n","import React from 'react'\nimport {CCard, CCardBody, CCol, CNav, CNavItem, CNavLink, CRow, CTabContent, CTabPane, CTabs,} from '@coreui/react'\nimport NewsForm from \"./NewsForm\";\nimport NewsTable from \"./NewsTable\";\nimport * as axios from \"axios\";\nimport DeleteModal from \"./modals/DeleteModal\";\nimport SuccessAlert from \"../../ui/alerts/SuccessAlert\";\nimport DeleteAlert from \"../../ui/alerts/DeleteAlert\";\nimport Cookies from \"universal-cookie\";\nimport {BASE_URL} from \"../../api/Api\";\n\nclass News extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newsList: [],\n            deleteModal: false,\n            showSuccessAlert: false,\n            showDeleteAlert: false,\n            errorMessage: {\n                showErrorAlert: false,\n                message: ''\n            },\n            modal: {\n                addNavLink: true,\n                manageNavLink: false,\n                addTab: true,\n                manageTab: false\n            }\n\n\n        }\n\n\n    }\n\n    updateNews = (newsList) => {\n\n        this.setState({\n            newsList: newsList\n        })\n\n\n    }\n\n    editProduct = () => {\n    }\n\n    deleteNews = (id) => {\n\n        this.setState({\n                deleteModal: true\n            }\n        )\n\n\n        return (\n\n            <DeleteModal deleteModal={this.props.deleteModal}/>\n        )\n    }\n\n    showAlert = () => {\n        this.setState({\n            showSuccessAlert: true\n        })\n\n    }\n\n    showDeleteAlert = () => {\n        this.setState({\n            showSuccessAlert: false,\n            showDeleteAlert: true\n        })\n\n    }\n\n    showErrorAlert = (errorMessage) => {\n        this.setState({\n            errorMessage: {\n                showErrorAlert: true,\n                message: errorMessage\n            }\n        })\n\n    }\n\n    addTabController = () => {\n        this.setState({\n            modal: {\n                addNavLink: true,\n                addTab: true,\n                manageNavLink: false,\n                manageTab: false\n            }\n        })\n    }\n\n    manageTabController = () => {\n\n        const cookies = new Cookies();\n\n        axios.get(BASE_URL+'/posts/',\n            {\n                headers: {\n\n                    Authorization: cookies.get('token')\n                }\n            }\n        )\n            .then(response => {\n\n                console.log(response.data)\n                const data = response.data\n\n                this.setState({\n                    newsList: data,\n                    modal: {\n                        addNavLink: false,\n                        addTab: false,\n                        manageNavLink: true,\n                        manageTab: true\n                    }\n                })\n\n            })\n    }\n\n\n    render() {\n        return (\n\n            <React.Fragment>\n                {this.state.errorMessage.showErrorAlert === true ?\n                    <DeleteAlert\n                        message={this.state.errorMessage.showErrorAlert.errorMessage}/>\n                    : null}\n\n                {this.state.showSuccessAlert === true ?\n                    <SuccessAlert\n                        message={\"News is added Successfully...\"}/>\n                    : null}\n\n                {this.state.showDeleteAlert === true ?\n                    <DeleteAlert\n                        message={\"News is deleted...\"}/>\n                    : null}\n\n                <CRow>\n                    <CCol xs=\"12\" md=\"12\" className=\"mb-4\">\n                        <CCard>\n                            <CCardBody>\n                                <CTabs>\n                                    <CNav variant=\"tabs\">\n                                        <CNavItem onClick={this.addTabController}>\n                                            <CNavLink active={this.state.modal.addNavLink}>\n                                                Add News\n                                            </CNavLink>\n                                        </CNavItem>\n                                        <CNavItem onClick={this.manageTabController}>\n                                            <CNavLink active={this.state.modal.manageNavLink}>\n                                                Manage\n                                            </CNavLink>\n                                        </CNavItem>\n                                    </CNav>\n\n                                    <CTabContent>\n\n                                        <CTabPane active={this.state.modal.addTab}>\n                                            <NewsForm\n                                                showErrorAlert={this.showErrorAlert}\n                                                showAlert={this.showAlert}\n                                                manageTabController={this.manageTabController}\n                                                updateNews={this.updateNews}/>\n                                        </CTabPane>\n\n                                        <CTabPane active={this.state.modal.manageTab}>\n                                            <NewsTable\n                                                showDeleteAlert={this.showDeleteAlert}\n                                                updateNews={this.updateNews}\n                                                deleteSupplier={this.deleteSupplier}\n                                                editProduct={this.editProduct}\n                                                newsList={this.state.newsList}/>\n                                        </CTabPane>\n\n                                    </CTabContent>\n                                </CTabs>\n                            </CCardBody>\n                        </CCard>\n                    </CCol>\n                </CRow>\n\n            </React.Fragment>\n        )\n    }\n\n\n}\n\nexport default News\n"],"sourceRoot":""}